import { c as create_ssr_component, a as validate_store, b as subscribe, v as validate_component } from "../../../chunks/ssr.js";
import { p as page } from "../../../chunks/stores.js";
import { P as PageLayout, C as Card } from "../../../chunks/PageLayout.js";
import { P as PitchDetectionDisplay, a as PitchDetector_1 } from "../../../chunks/PitchDetectionDisplay.js";
const css = {
  code: ".microphone-test.svelte-s1thfd{max-width:800px;margin:0 auto;display:flex;flex-direction:column;gap:var(--space-6)}.header.svelte-s1thfd{text-align:center}.mic-test-header.svelte-s1thfd{display:flex;align-items:center;justify-content:center;gap:var(--space-4);margin-bottom:var(--space-4)}.mic-icon.svelte-s1thfd{width:64px;height:64px;border-radius:50%;background-color:#dbeafe;color:#2563eb;display:flex;align-items:center;justify-content:center;flex-shrink:0}.mic-test-title.svelte-s1thfd{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.mic-test-description.svelte-s1thfd{font-size:var(--text-base);color:var(--color-gray-600);margin:0}.training-mode-info.svelte-s1thfd{margin-bottom:var(--space-6)}.training-mode-content.svelte-s1thfd{text-align:center}.instructions-title.svelte-s1thfd{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.instructions-description.svelte-s1thfd{font-size:var(--text-sm);color:var(--color-gray-600);margin:0;text-align:center}.status-text.svelte-s1thfd{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:var(--space-6) 0;text-align:center}.ready-title.svelte-s1thfd{font-size:var(--text-xl);font-weight:600;color:#2563eb;margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.ready-description.svelte-s1thfd{font-size:var(--text-sm);color:var(--color-gray-600);margin:0 0 var(--space-6) 0;text-align:center}.mic-test-button-area.svelte-s1thfd,.training-start-button-area.svelte-s1thfd{margin-top:var(--space-6);display:flex;justify-content:center}.mic-test-button.svelte-s1thfd{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px}.mic-test-button.start.svelte-s1thfd{background-color:#2563eb;color:white}.mic-test-button.start.svelte-s1thfd:hover{background-color:#1d4ed8}.mic-test-button.retry.svelte-s1thfd{background-color:#dc2626;color:white}.mic-test-button.retry.svelte-s1thfd:hover{background-color:#b91c1c}.training-start-button.svelte-s1thfd{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px;background-color:#059669;color:white}.training-start-button.enabled.svelte-s1thfd:hover{background-color:#047857}@media(min-width: 768px){.mic-test-header.svelte-s1thfd{flex-direction:row;text-align:left}}.main-card{border:1px solid hsl(214.3 31.8% 91.4%) !important;background:hsl(0 0% 100%) !important;border-radius:8px !important;box-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px 0 rgb(0 0 0 / 0.06) !important;margin-bottom:1.5rem}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { page } from '$app/stores';\\n  import { goto } from '$app/navigation';\\n  import { base } from '$app/paths';\\n  import Card from '$lib/components/Card.svelte';\\n  import Button from '$lib/components/Button.svelte';\\n  import PageLayout from '$lib/components/PageLayout.svelte';\\n  import PitchDetector from '$lib/components/PitchDetector.svelte';\\n  import PitchDetectionDisplay from '$lib/components/PitchDetectionDisplay.svelte';\\n  import VolumeBar from '$lib/components/VolumeBar.svelte';\\n  import { audioManager } from '$lib/audio/AudioManager.js';\\n  \\n  // URL パラメータから mode を取得\\n  let mode = 'random';\\n  \\n  onMount(() => {\\n    if ($page.url.searchParams.has('mode')) {\\n      mode = $page.url.searchParams.get('mode') || 'random';\\n    }\\n  });\\n\\n  // マイクテスト状態管理（シンプル版）\\n  let micPermission = 'initial'; // 'initial' | 'pending' | 'granted' | 'denied'\\n\\n  // 音程検出\\n  let currentVolume = 0;\\n  let currentFrequency = 0;\\n  let detectedNote = 'ーー';\\n  let pitchDetectorComponent = null;\\n\\n  // トレーニングモード設定\\n  const trainingModes = {\\n    random: {\\n      name: 'ランダム基音モード',\\n      description: '10種類の基音からランダムに選択してトレーニング',\\n      color: 'green',\\n      path: '/training/random'\\n    },\\n    continuous: {\\n      name: '連続チャレンジモード',\\n      description: '選択した回数だけ連続で実行し、総合評価を確認',\\n      color: 'orange',\\n      path: '/training/continuous'\\n    },\\n    chromatic: {\\n      name: '12音階モード',\\n      description: 'クロマチックスケールの上行・下行で完全制覇',\\n      color: 'purple',\\n      path: '/training/chromatic'\\n    }\\n  };\\n\\n  const selectedMode = trainingModes[mode] || trainingModes.random;\\n  \\n  // マイク許可確認（シンプル版 - ランダム基音ページから移植）\\n  async function requestMicrophone() {\\n    micPermission = 'pending';\\n    \\n    try {\\n      console.log('🎤 [MicTest] マイク許可リクエスト開始');\\n      \\n      if (!navigator.mediaDevices?.getUserMedia) {\\n        micPermission = 'denied';\\n        console.error('❌ [MicTest] getUserMediaがサポートされていません');\\n        return;\\n      }\\n      \\n      // AudioManagerから共有リソースを取得（初回のみマイク許可ダイアログ表示）\\n      const resources = await audioManager.initialize();\\n      console.log('✅ [MicTest] AudioManager リソース取得完了');\\n      \\n      // マイク許可が取得できたことを確認\\n      if (resources.mediaStream && resources.audioContext) {\\n        micPermission = 'granted';\\n        console.log('✅ [MicTest] マイク許可完了');\\n        \\n        // PitchDetector初期化（マイク許可後）\\n        // Safari対応: より長い待機時間でMediaStream安定化\\n        setTimeout(async () => {\\n          if (pitchDetectorComponent) {\\n            console.log('🎙️ [MicTest] PitchDetector初期化開始');\\n            await pitchDetectorComponent.initialize();\\n            console.log('✅ [MicTest] PitchDetector初期化完了');\\n            \\n            // リアクティブなisActiveで自動検出開始されるため手動呼び出し不要\\n            console.log('🎯 [MicTest] PitchDetector isActiveリアクティブで自動検出開始');\\n          }\\n        }, 1000);\\n      } else {\\n        throw new Error('リソース取得失敗');\\n      }\\n      \\n    } catch (error) {\\n      console.error('❌ [MicTest] マイク許可エラー:', error);\\n      micPermission = (error?.name === 'NotAllowedError') ? 'denied' : 'denied';\\n    }\\n  }\\n  \\n  // トレーニング開始関数\\n  function startTraining() {\\n    console.log('🚀 [MicTest] トレーニング開始 - ランダム基音モードへ遷移');\\n    // マイクテスト完了フラグを保存\\n    localStorage.setItem('mic-test-completed', 'true');\\n    console.log('✅ [MicTest] マイクテスト完了フラグを保存');\\n    goto(\`\${base}\${selectedMode.path}?from=microphone-test\`);\\n  }\\n\\n  // PitchDetectorコンポーネントからのイベントハンドラー\\n  function handlePitchUpdate(event) {\\n    const { frequency, note, volume, rawVolume, clarity } = event.detail;\\n    \\n    currentFrequency = frequency;\\n    detectedNote = note;\\n    currentVolume = volume;\\n  }\\n  \\n  function handlePitchDetectorStateChange(event) {\\n    // ログ削除（シンプル版）\\n  }\\n  \\n  function handlePitchDetectorError(event) {\\n    console.error('❌ [MicTest] PitchDetectorエラー:', event.detail);\\n    \\n    const { error, reason, recovery } = event.detail;\\n    \\n    // MediaStream終了エラーの場合は自動復旧を試行\\n    if (reason === 'mediastream_ended' && recovery === 'restart_required') {\\n      console.log('🔄 [MicTest] MediaStream終了検出 - 自動復旧開始');\\n      \\n      // マイク許可状態をリセット\\n      micPermission = 'initial';\\n      \\n      // 検出データをリセット\\n      currentVolume = 0;\\n      currentFrequency = 0;\\n      detectedNote = 'ーー';\\n      \\n      // ユーザーに再許可を促すメッセージ（自動的に表示される）\\n      console.log('⚠️ [MicTest] マイク再許可が必要です');\\n    }\\n  }\\n<\/script>\\n\\n<svelte:head>\\n  <title>マイクテスト - 相対音感トレーニング</title>\\n</svelte:head>\\n\\n<PageLayout showBackButton={true}>\\n  <div class=\\"microphone-test\\">\\n    <!-- ヘッダー -->\\n    <div class=\\"header\\">\\n      <div class=\\"mic-test-header\\">\\n        <div class=\\"mic-icon\\">\\n          <svg width=\\"48\\" height=\\"48\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\\"/>\\n            <path d=\\"M19 10v2a7 7 0 0 1-14 0v-2\\"/>\\n            <line x1=\\"12\\" x2=\\"12\\" y1=\\"19\\" y2=\\"22\\"/>\\n            <line x1=\\"8\\" x2=\\"16\\" y1=\\"22\\" y2=\\"22\\"/>\\n          </svg>\\n        </div>\\n        <div>\\n          <h1 class=\\"mic-test-title\\">マイクテスト</h1>\\n          <p class=\\"mic-test-description\\">音感トレーニングを始める前に、マイクの動作を確認します</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- トレーニングモード情報 -->\\n    <div class=\\"training-mode-info\\">\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"training-mode-content\\">\\n          {#if micPermission === 'granted'}\\n            <!-- マイク許可完了 -->\\n            <h3 class=\\"ready-title\\">マイク準備完了</h3>\\n            <p class=\\"ready-description\\">トレーニング開始ボタンを押して{selectedMode.name}へ進んでください</p>\\n            \\n            <div class=\\"training-start-button-area\\">\\n              <button class=\\"training-start-button enabled\\" on:click={startTraining}>\\n                トレーニング開始\\n              </button>\\n            </div>\\n          {:else}\\n            <!-- マイクテスト説明 -->\\n            <h3 class=\\"instructions-title\\">マイクのテストを開始します</h3>\\n            <p class=\\"instructions-description\\">マイクテスト開始ボタンを押してマイクの使用を許可してください</p>\\n            \\n            {#if micPermission === 'pending'}\\n              <p class=\\"status-text\\">マイク準備中...</p>\\n            {:else if micPermission === 'denied'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button retry\\" on:click={requestMicrophone}>\\n                  マイク許可を再試行\\n                </button>\\n              </div>\\n            {:else if micPermission === 'initial'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button start\\" on:click={requestMicrophone}>\\n                  マイクテストを開始\\n                </button>\\n              </div>\\n            {/if}\\n          {/if}\\n        </div>\\n      </Card>\\n    </div>\\n\\n    <!-- リアルタイム音程検出エリア（常時表示） -->\\n    <PitchDetectionDisplay\\n      frequency={currentFrequency}\\n      note={detectedNote}\\n      volume={currentVolume}\\n      isMuted={micPermission !== 'granted'}\\n      muteMessage=\\"マイク許可後に開始\\"\\n    />\\n    \\n    <!-- PitchDetectorコンポーネント（非表示・検出処理のみ） -->\\n    <div style=\\"display: none;\\">\\n      <PitchDetector\\n        bind:this={pitchDetectorComponent}\\n        isActive={micPermission === 'granted'}\\n        on:pitchUpdate={handlePitchUpdate}\\n        on:stateChange={handlePitchDetectorStateChange}\\n        on:error={handlePitchDetectorError}\\n        className=\\"pitch-detector-content\\"\\n        debugMode={false}\\n      />\\n    </div>\\n\\n  </div>\\n</PageLayout>\\n\\n<style>\\n  .microphone-test {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-6);\\n  }\\n\\n  .header {\\n    text-align: center;\\n  }\\n\\n  .mic-test-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: var(--space-4);\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .mic-icon {\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #dbeafe;\\n    color: #2563eb;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n  }\\n\\n  .mic-test-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .mic-test-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .training-mode-info {\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .training-mode-content {\\n    text-align: center;\\n  }\\n\\n  .training-mode-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .training-mode-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .mic-test-instructions {\\n    text-align: center;\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .instructions-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .instructions-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n    text-align: center;\\n  }\\n\\n  .status-text {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .status-text.voice-instruction {\\n    color: #2563eb;\\n    font-size: var(--text-xl);\\n    font-weight: 700;\\n  }\\n\\n  .ready-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: #2563eb;\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .ready-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .mic-test-button-area,\\n  .training-start-button-area {\\n    margin-top: var(--space-6);\\n    display: flex;\\n    justify-content: center;\\n  }\\n\\n  .mic-test-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .mic-test-button.start {\\n    background-color: #2563eb;\\n    color: white;\\n  }\\n\\n  .mic-test-button.start:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .mic-test-button.preparing {\\n    background-color: #f59e0b;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.confirming {\\n    background-color: #8b5cf6;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.retry {\\n    background-color: #dc2626;\\n    color: white;\\n  }\\n\\n  .mic-test-button.retry:hover {\\n    background-color: #b91c1c;\\n  }\\n\\n  .training-start-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-start-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .mic-status-granted {\\n    margin-bottom: var(--space-4);\\n    text-align: center;\\n  }\\n\\n  .status-indicator.success {\\n    background-color: #d1fae5;\\n    color: #065f46;\\n    border: 1px solid #34d399;\\n  }\\n\\n  .mic-test-content {\\n    text-align: center;\\n  }\\n\\n  .mic-status {\\n    margin-bottom: var(--space-6);\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-2);\\n  }\\n\\n  .status-indicator {\\n    padding: var(--space-3);\\n    border-radius: 8px;\\n    font-weight: 600;\\n    font-size: var(--text-sm);\\n  }\\n\\n  .status-indicator.pending {\\n    background-color: #fef3c7;\\n    color: #92400e;\\n    border: 1px solid #fcd34d;\\n  }\\n\\n\\n  .status-indicator.error {\\n    background-color: #fee2e2;\\n    color: #991b1b;\\n    border: 1px solid #fca5a5;\\n  }\\n\\n  .start-button,\\n  .retry-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    background-color: #2563eb;\\n    color: white;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .start-button:hover,\\n  .retry-button:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .training-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .training-button.enabled {\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .training-button.disabled {\\n    background-color: #f3f4f6;\\n    color: #9ca3af;\\n    cursor: not-allowed;\\n  }\\n\\n  .guidance-text {\\n    font-size: var(--text-sm);\\n    color: #2563eb;\\n    font-weight: 600;\\n    margin-bottom: var(--space-2);\\n    text-align: center;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .mic-test-header {\\n      flex-direction: row;\\n      text-align: left;\\n    }\\n  }\\n\\n  /* カードスタイル（shadcn/ui風） */\\n  :global(.main-card) {\\n    border: 1px solid hsl(214.3 31.8% 91.4%) !important;\\n    background: hsl(0 0% 100%) !important;\\n    border-radius: 8px !important;\\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px 0 rgb(0 0 0 / 0.06) !important;\\n    margin-bottom: 1.5rem;\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_page;
  validate_store(page, "page");
  $$unsubscribe_page = subscribe(page, (value) => value);
  let micPermission = "initial";
  let currentVolume = 0;
  let currentFrequency = 0;
  let detectedNote = "ーー";
  let pitchDetectorComponent = null;
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `${$$result.head += `<!-- HEAD_svelte-8st1fo_START -->${$$result.title = `<title>マイクテスト - 相対音感トレーニング</title>`, ""}<!-- HEAD_svelte-8st1fo_END -->`, ""} ${validate_component(PageLayout, "PageLayout").$$render($$result, { showBackButton: true }, {}, {
      default: () => {
        return `<div class="microphone-test svelte-s1thfd"> <div class="header svelte-s1thfd"><div class="mic-test-header svelte-s1thfd"><div class="mic-icon svelte-s1thfd"><svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" x2="12" y1="19" y2="22"></line><line x1="8" x2="16" y1="22" y2="22"></line></svg></div> <div><h1 class="mic-test-title svelte-s1thfd" data-svelte-h="svelte-z7m4lk">マイクテスト</h1> <p class="mic-test-description svelte-s1thfd" data-svelte-h="svelte-1vtv92f">音感トレーニングを始める前に、マイクの動作を確認します</p></div></div></div>  <div class="training-mode-info svelte-s1thfd">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
          default: () => {
            return `<div class="training-mode-content svelte-s1thfd">${` <h3 class="instructions-title svelte-s1thfd" data-svelte-h="svelte-gfi16f">マイクのテストを開始します</h3> <p class="instructions-description svelte-s1thfd" data-svelte-h="svelte-1w19y1h">マイクテスト開始ボタンを押してマイクの使用を許可してください</p> ${`${`${`<div class="mic-test-button-area svelte-s1thfd"><button class="mic-test-button start svelte-s1thfd" data-svelte-h="svelte-caex95">マイクテストを開始</button></div>`}`}`}`}</div>`;
          }
        })}</div>  ${validate_component(PitchDetectionDisplay, "PitchDetectionDisplay").$$render(
          $$result,
          {
            frequency: currentFrequency,
            note: detectedNote,
            volume: currentVolume,
            isMuted: micPermission !== "granted",
            muteMessage: "マイク許可後に開始"
          },
          {},
          {}
        )}  <div style="display: none;">${validate_component(PitchDetector_1, "PitchDetector").$$render(
          $$result,
          {
            isActive: micPermission === "granted",
            className: "pitch-detector-content",
            debugMode: false,
            this: pitchDetectorComponent
          },
          {
            this: ($$value) => {
              pitchDetectorComponent = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div>`;
      }
    })}`;
  } while (!$$settled);
  $$unsubscribe_page();
  return $$rendered;
});
export {
  Page as default
};
