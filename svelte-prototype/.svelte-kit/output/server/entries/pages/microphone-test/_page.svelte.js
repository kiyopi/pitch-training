import { c as create_ssr_component, b as validate_store, d as subscribe, o as onDestroy, v as validate_component, e as escape } from "../../../chunks/ssr.js";
import { p as page } from "../../../chunks/stores.js";
import { P as PageLayout, C as Card } from "../../../chunks/PageLayout.js";
import { P as PitchDetector_1 } from "../../../chunks/PitchDetector.js";
const css = {
  code: ".microphone-test.svelte-19mrh3{max-width:800px;margin:0 auto;display:flex;flex-direction:column;gap:var(--space-6)}.header.svelte-19mrh3{text-align:center}.mic-test-header.svelte-19mrh3{display:flex;align-items:center;justify-content:center;gap:var(--space-4);margin-bottom:var(--space-4)}.mic-icon.svelte-19mrh3{width:64px;height:64px;border-radius:50%;background-color:#dbeafe;color:#2563eb;display:flex;align-items:center;justify-content:center;flex-shrink:0}.mic-test-title.svelte-19mrh3{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.mic-test-description.svelte-19mrh3{font-size:var(--text-base);color:var(--color-gray-600);margin:0}.training-mode-info.svelte-19mrh3{margin-bottom:var(--space-6)}.training-mode-content.svelte-19mrh3{text-align:center}.instructions-title.svelte-19mrh3{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.instructions-description.svelte-19mrh3{font-size:var(--text-sm);color:var(--color-gray-600);margin:0;text-align:center}.status-text.svelte-19mrh3{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:var(--space-6) 0;text-align:center}.status-text.voice-instruction.svelte-19mrh3{color:#2563eb;font-size:var(--text-xl);font-weight:700}.ready-title.svelte-19mrh3{font-size:var(--text-xl);font-weight:600;color:#2563eb;margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.ready-description.svelte-19mrh3{font-size:var(--text-sm);color:var(--color-gray-600);margin:0 0 var(--space-6) 0;text-align:center}.mic-test-button-area.svelte-19mrh3,.training-start-button-area.svelte-19mrh3{margin-top:var(--space-6);display:flex;justify-content:center}.mic-test-button.svelte-19mrh3{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px}.mic-test-button.start.svelte-19mrh3{background-color:#2563eb;color:white}.mic-test-button.start.svelte-19mrh3:hover{background-color:#1d4ed8}.mic-test-button.retry.svelte-19mrh3{background-color:#dc2626;color:white}.mic-test-button.retry.svelte-19mrh3:hover{background-color:#b91c1c}.training-start-button.svelte-19mrh3{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px;background-color:#059669;color:white}.training-start-button.enabled.svelte-19mrh3:hover{background-color:#047857}.test-section.svelte-19mrh3{display:flex;flex-direction:column;gap:var(--space-4)}.display-title.svelte-19mrh3{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-3) 0}.card-inner.svelte-19mrh3{display:flex;align-items:center;justify-content:center;min-height:180px}.volume-section.svelte-19mrh3{display:flex;flex-direction:column;justify-content:center;text-align:center;width:100%}.frequency-section.svelte-19mrh3{display:flex;flex-direction:column;justify-content:center;text-align:center;width:100%}.volume-bar-container.svelte-19mrh3{width:100%;height:20px;background-color:#e5e7eb;border-radius:10px;overflow:hidden;margin-bottom:var(--space-2)}.volume-bar.svelte-19mrh3{height:100%;background-color:#2563eb;border-radius:10px;transition:width 0.1s ease}.volume-text.svelte-19mrh3{text-align:center;font-weight:600;color:var(--color-gray-700);margin-bottom:var(--space-2)}.frequency-display.svelte-19mrh3{margin-bottom:var(--space-2)}.frequency-value.svelte-19mrh3{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin-bottom:var(--space-1)}.note-value.svelte-19mrh3{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-700)}.volume-status.svelte-19mrh3,.frequency-status.svelte-19mrh3{text-align:center;min-height:24px;display:flex;align-items:center;justify-content:center}.status-pending.svelte-19mrh3{color:var(--color-gray-600)}.noise-reduction-info.svelte-19mrh3{margin:var(--space-3) 0;padding:var(--space-3);background-color:#f8fafc;border-radius:8px;border:1px solid #e2e8f0}.noise-stats.svelte-19mrh3{display:flex;flex-direction:column;gap:var(--space-2)}.stat-item.svelte-19mrh3{display:flex;justify-content:space-between;align-items:center;font-size:var(--text-sm)}.stat-label.svelte-19mrh3{color:var(--color-gray-600);font-weight:500}.stat-value.svelte-19mrh3{font-weight:600;font-family:'Monaco', 'Menlo', monospace}.stat-value.raw.svelte-19mrh3{color:#dc2626}.stat-value.filtered.svelte-19mrh3{color:#2563eb}.stat-value.reduction.svelte-19mrh3{color:#059669;font-weight:700}@media(min-width: 768px){.mic-test-header.svelte-19mrh3{flex-direction:row;text-align:left}.test-section.svelte-19mrh3{flex-direction:row;align-items:stretch}.test-section.svelte-19mrh3>.card{flex:1}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount, onDestroy } from 'svelte';\\n  import { page } from '$app/stores';\\n  import { goto } from '$app/navigation';\\n  import { base } from '$app/paths';\\n  import Card from '$lib/components/Card.svelte';\\n  import Button from '$lib/components/Button.svelte';\\n  import PageLayout from '$lib/components/PageLayout.svelte';\\n  import PitchDetector from '$lib/components/PitchDetector.svelte';\\n  import { audioManager } from '$lib/audio/AudioManager.js';\\n  \\n  // URL パラメータから mode を取得\\n  let mode = 'random';\\n  \\n  onMount(() => {\\n    if ($page.url.searchParams.has('mode')) {\\n      mode = $page.url.searchParams.get('mode') || 'random';\\n    }\\n  });\\n\\n  // マイクテスト状態管理（PitchDetector対応版）\\n  let micPermission = 'initial'; // 'initial' | 'pending' | 'granted' | 'denied'\\n  let isListening = false;       // PitchDetectorが動作中かどうか\\n  let volumeDetected = false;\\n  let frequencyDetected = false;\\n  let audioConfirmationComplete = false;\\n  \\n  // PitchDetectorから取得するデータ\\n  let currentVolume = 0;\\n  let currentFrequency = 0;\\n  let currentNote = 'ーー';\\n  let pitchClarity = 0;\\n  \\n  // ノイズリダクション効果確認用\\n  let rawVolume = 0;        // フィルター前の音量（PitchDetectorから取得）\\n  let filteredVolume = 0;   // フィルター後の音量（PitchDetectorから取得）\\n  let noiseReduction = 0;   // ノイズ削減率（%）\\n  \\n  // PitchDetectorコンポーネント参照\\n  let pitchDetectorComponent = null;\\n\\n  // トレーニングモード設定\\n  const trainingModes = {\\n    random: {\\n      name: 'ランダム基音モード',\\n      description: '10種類の基音からランダムに選択してトレーニング',\\n      color: 'green',\\n      path: '/training/random'\\n    },\\n    continuous: {\\n      name: '連続チャレンジモード',\\n      description: '選択した回数だけ連続で実行し、総合評価を確認',\\n      color: 'orange',\\n      path: '/training/continuous'\\n    },\\n    chromatic: {\\n      name: '12音階モード',\\n      description: 'クロマチックスケールの上行・下行で完全制覇',\\n      color: 'purple',\\n      path: '/training/chromatic'\\n    }\\n  };\\n\\n  const selectedMode = trainingModes[mode] || trainingModes.random;\\n  \\n  // ボタン状態の計算\\n  $: {\\n    if (volumeDetected && frequencyDetected && !audioConfirmationComplete) {\\n      // 音声確認完了の即座設定\\n      audioConfirmationComplete = true;\\n    }\\n  }\\n  \\n  // マイク許可リクエスト（PitchDetector対応版）\\n  async function requestMicrophone() {\\n    micPermission = 'pending';\\n    \\n    try {\\n      console.log('🎤 [MicTest] PitchDetector経由でマイク許可リクエスト開始');\\n      \\n      // PitchDetectorを初期化（AudioManager統合済み）\\n      if (pitchDetectorComponent) {\\n        await pitchDetectorComponent.initialize();\\n        console.log('✅ [MicTest] PitchDetector初期化完了');\\n      }\\n      \\n      micPermission = 'granted';\\n      isListening = true;  // PitchDetectorがアクティブになる\\n      console.log('✅ [MicTest] マイク許可完了');\\n      \\n    } catch (error) {\\n      console.error('❌ [MicTest] マイク許可エラー:', error);\\n      micPermission = 'denied';\\n    }\\n  }\\n  \\n  // PitchDetectorからの音程更新イベントハンドラー\\n  function handlePitchUpdate(event) {\\n    const { frequency, note, volume, rawVolume: rawVol, clarity } = event.detail;\\n    \\n    // データを更新\\n    currentFrequency = frequency;\\n    currentNote = note;\\n    currentVolume = volume;\\n    pitchClarity = clarity;\\n    \\n    // ノイズリダクション効果の表示用\\n    rawVolume = rawVol;\\n    filteredVolume = volume;\\n    \\n    // ノイズ削減率計算（フィルター前後の差分）\\n    if (rawVolume > 0) {\\n      noiseReduction = Math.max(0, Math.round(((rawVolume - filteredVolume) / rawVolume) * 100));\\n    } else {\\n      noiseReduction = 0;\\n    }\\n    \\n    // 検出判定\\n    if (currentVolume > 5) {  // 閾値を下げて感度を上げる\\n      volumeDetected = true;\\n    }\\n    \\n    if (frequency > 80 && frequency < 800) {\\n      frequencyDetected = true;\\n    }\\n    \\n    // デバッグログ（最初の数回のみ）\\n    if (!window.micTestDebugCount) window.micTestDebugCount = 0;\\n    if (window.micTestDebugCount < 5) {\\n      window.micTestDebugCount++;\\n      console.log(\`🎙️ [MicTest] PitchUpdate \${window.micTestDebugCount}:\`, {\\n        frequency: frequency.toFixed(1),\\n        volume: volume.toFixed(1),\\n        rawVolume: rawVol.toFixed(1),\\n        note\\n      });\\n    }\\n  }\\n  \\n  // PitchDetectorエラーハンドラー\\n  function handlePitchDetectorError(event) {\\n    const { error, reason, recovery } = event.detail;\\n    console.error('🚨 [MicTest] PitchDetectorエラー:', { error, reason, recovery });\\n    \\n    if (reason === 'mediastream_ended') {\\n      console.error('🚨 [MicTest] MediaStream終了 - マイク許可をリセット');\\n      micPermission = 'denied';\\n      isListening = false;\\n      volumeDetected = false;\\n      frequencyDetected = false;\\n      audioConfirmationComplete = false;\\n      \\n      // ユーザーに再試行を促す\\n      alert('マイクアクセスが中断されました。マイクテストを再開してください。');\\n    }\\n  }\\n  \\n  // PitchDetector警告ハンドラー\\n  function handlePitchDetectorWarning(event) {\\n    const { reason, track } = event.detail;\\n    console.warn('⚠️ [MicTest] PitchDetector警告:', { reason, track });\\n    \\n    if (reason === 'track_muted') {\\n      console.warn('⚠️ [MicTest] マイクがミュート状態です');\\n    }\\n  }\\n  \\n  // リスニング停止（PitchDetector対応版）\\n  function stopListening() {\\n    console.log('🛑 [MicTest] リスニング停止開始');\\n    \\n    // PitchDetectorの検出を停止\\n    if (pitchDetectorComponent) {\\n      pitchDetectorComponent.stopDetection();\\n      console.log('✅ [MicTest] PitchDetector検出停止');\\n    }\\n    \\n    console.log('✅ [MicTest] リスニング停止完了');\\n  }\\n  \\n  // トレーニング開始関数\\n  function startTraining() {\\n    console.log('🚀 [MicTest] トレーニング開始 - ランダム基音モードへ遷移');\\n    goto(\`\${base}/training/random?from=microphone-test\`);\\n  }\\n  \\n  // ページ離脱時のクリーンアップ\\n  onDestroy(() => {\\n    stopListening();\\n  });\\n<\/script>\\n\\n<svelte:head>\\n  <title>マイクテスト - 相対音感トレーニング</title>\\n</svelte:head>\\n\\n<PageLayout showBackButton={true}>\\n  <!-- PitchDetectorコンポーネント（非表示で音声処理のみ） -->\\n  <div style=\\"display: none;\\">\\n    <PitchDetector\\n      bind:this={pitchDetectorComponent}\\n      isActive={micPermission === 'granted'}\\n      on:pitchUpdate={handlePitchUpdate}\\n      on:error={handlePitchDetectorError}\\n      on:warning={handlePitchDetectorWarning}\\n      debugMode={true}\\n    />\\n  </div>\\n\\n  <div class=\\"microphone-test\\">\\n    <!-- ヘッダー -->\\n    <div class=\\"header\\">\\n      <div class=\\"mic-test-header\\">\\n        <div class=\\"mic-icon\\">\\n          <svg width=\\"48\\" height=\\"48\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\\"/>\\n            <path d=\\"M19 10v2a7 7 0 0 1-14 0v-2\\"/>\\n            <line x1=\\"12\\" x2=\\"12\\" y1=\\"19\\" y2=\\"22\\"/>\\n            <line x1=\\"8\\" x2=\\"16\\" y1=\\"22\\" y2=\\"22\\"/>\\n          </svg>\\n        </div>\\n        <div>\\n          <h1 class=\\"mic-test-title\\">マイクテスト</h1>\\n          <p class=\\"mic-test-description\\">音感トレーニングを始める前に、マイクの動作を確認します</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- トレーニングモード情報 -->\\n    <div class=\\"training-mode-info\\">\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"training-mode-content\\">\\n          {#if !audioConfirmationComplete}\\n            <!-- マイクテスト段階の表示 -->\\n            {#if micPermission === 'granted' && isListening && (!volumeDetected || !frequencyDetected)}\\n              <!-- 音声確認中は説明非表示 -->\\n              <p class=\\"status-text voice-instruction\\">「ドー」と発声してください</p>\\n            {:else}\\n              <!-- 通常のマイクテスト説明 -->\\n              <h3 class=\\"instructions-title\\">マイクのテストを開始します</h3>\\n              <p class=\\"instructions-description\\">マイクテスト開始ボタンを押してマイクの使用を許可してください</p>\\n            {/if}\\n            \\n            {#if micPermission === 'pending'}\\n              <p class=\\"status-text\\">マイク準備中...</p>\\n            {:else if micPermission === 'denied'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button retry\\" on:click={requestMicrophone}>\\n                  マイク許可を再試行\\n                </button>\\n              </div>\\n            {:else if micPermission === 'initial'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button start\\" on:click={requestMicrophone}>\\n                  マイクテストを開始\\n                </button>\\n              </div>\\n            {/if}\\n          {:else}\\n            <!-- トレーニング開始段階の表示 -->\\n            <h3 class=\\"ready-title\\">マイク準備完了</h3>\\n            <p class=\\"ready-description\\">トレーニング開始ボタンを押してランダム基音モードへ進んでください</p>\\n            \\n            <div class=\\"training-start-button-area\\">\\n              <button class=\\"training-start-button enabled\\" on:click={startTraining}>\\n                トレーニング開始\\n              </button>\\n            </div>\\n          {/if}\\n        </div>\\n      </Card>\\n    </div>\\n\\n    <!-- マイクテストセクション -->\\n    <div class=\\"test-section\\">\\n      <!-- 音量レベルカード -->\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"card-inner\\">\\n          <div class=\\"volume-section\\">\\n            <h3 class=\\"display-title\\">音量レベル</h3>\\n            <div class=\\"volume-bar-container\\">\\n              <div class=\\"volume-bar\\" style=\\"width: {currentVolume}%\\"></div>\\n            </div>\\n            <div class=\\"volume-text\\">{currentVolume.toFixed(1)}%</div>\\n            \\n            <!-- ノイズリダクション効果表示 -->\\n            {#if isListening}\\n              <div class=\\"noise-reduction-info\\">\\n                <div class=\\"noise-stats\\">\\n                  <div class=\\"stat-item\\">\\n                    <span class=\\"stat-label\\">フィルター前:</span>\\n                    <span class=\\"stat-value raw\\">{rawVolume.toFixed(1)}%</span>\\n                  </div>\\n                  <div class=\\"stat-item\\">\\n                    <span class=\\"stat-label\\">フィルター後:</span>\\n                    <span class=\\"stat-value filtered\\">{filteredVolume.toFixed(1)}%</span>\\n                  </div>\\n                  <div class=\\"stat-item\\">\\n                    <span class=\\"stat-label\\">ノイズ削減:</span>\\n                    <span class=\\"stat-value reduction\\">{noiseReduction}%</span>\\n                  </div>\\n                </div>\\n              </div>\\n            {/if}\\n            \\n            <div class=\\"volume-status\\">\\n              <span class=\\"status-pending\\">\\n                {#if !volumeDetected && isListening}\\n                  ⏳ 声を出して音量を確認してください\\n                {:else}\\n                  &nbsp;\\n                {/if}\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </Card>\\n\\n      <!-- 音程検出カード -->\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"card-inner\\">\\n          <div class=\\"frequency-section\\">\\n            <h3 class=\\"display-title\\">音程検出</h3>\\n            <div class=\\"frequency-display\\">\\n              <div class=\\"frequency-value\\">{currentFrequency > 0 ? currentFrequency.toFixed(1) + ' Hz' : 'ーー'}</div>\\n              <div class=\\"note-value\\">{currentNote}</div>\\n            </div>\\n            <div class=\\"frequency-status\\">\\n              <span class=\\"status-pending\\">\\n                {#if !frequencyDetected && isListening}\\n                  ⏳ 「ド」を発声して音程を確認してください\\n                {:else}\\n                  &nbsp;\\n                {/if}\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n      </Card>\\n    </div>\\n\\n  </div>\\n</PageLayout>\\n\\n<style>\\n  .microphone-test {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-6);\\n  }\\n\\n  .header {\\n    text-align: center;\\n  }\\n\\n  .mic-test-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: var(--space-4);\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .mic-icon {\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #dbeafe;\\n    color: #2563eb;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n  }\\n\\n  .mic-test-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .mic-test-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .training-mode-info {\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .training-mode-content {\\n    text-align: center;\\n  }\\n\\n  .training-mode-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .training-mode-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .mic-test-instructions {\\n    text-align: center;\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .instructions-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .instructions-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n    text-align: center;\\n  }\\n\\n  .status-text {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .status-text.voice-instruction {\\n    color: #2563eb;\\n    font-size: var(--text-xl);\\n    font-weight: 700;\\n  }\\n\\n  .ready-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: #2563eb;\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .ready-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .mic-test-button-area,\\n  .training-start-button-area {\\n    margin-top: var(--space-6);\\n    display: flex;\\n    justify-content: center;\\n  }\\n\\n  .mic-test-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .mic-test-button.start {\\n    background-color: #2563eb;\\n    color: white;\\n  }\\n\\n  .mic-test-button.start:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .mic-test-button.preparing {\\n    background-color: #f59e0b;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.confirming {\\n    background-color: #8b5cf6;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.retry {\\n    background-color: #dc2626;\\n    color: white;\\n  }\\n\\n  .mic-test-button.retry:hover {\\n    background-color: #b91c1c;\\n  }\\n\\n  .training-start-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-start-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .mic-status-granted {\\n    margin-bottom: var(--space-4);\\n    text-align: center;\\n  }\\n\\n  .status-indicator.success {\\n    background-color: #d1fae5;\\n    color: #065f46;\\n    border: 1px solid #34d399;\\n  }\\n\\n  .mic-test-content {\\n    text-align: center;\\n  }\\n\\n  .mic-status {\\n    margin-bottom: var(--space-6);\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-2);\\n  }\\n\\n  .status-indicator {\\n    padding: var(--space-3);\\n    border-radius: 8px;\\n    font-weight: 600;\\n    font-size: var(--text-sm);\\n  }\\n\\n  .status-indicator.pending {\\n    background-color: #fef3c7;\\n    color: #92400e;\\n    border: 1px solid #fcd34d;\\n  }\\n\\n\\n  .status-indicator.error {\\n    background-color: #fee2e2;\\n    color: #991b1b;\\n    border: 1px solid #fca5a5;\\n  }\\n\\n  .start-button,\\n  .retry-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    background-color: #2563eb;\\n    color: white;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .start-button:hover,\\n  .retry-button:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .training-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .training-button.enabled {\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .training-button.disabled {\\n    background-color: #f3f4f6;\\n    color: #9ca3af;\\n    cursor: not-allowed;\\n  }\\n\\n  .guidance-text {\\n    font-size: var(--text-sm);\\n    color: #2563eb;\\n    font-weight: 600;\\n    margin-bottom: var(--space-2);\\n    text-align: center;\\n  }\\n\\n  .test-section {\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-4);\\n  }\\n\\n  .display-title {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-3) 0;\\n  }\\n\\n  .card-inner {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    min-height: 180px;\\n  }\\n  \\n  .volume-section {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    text-align: center;\\n    width: 100%;\\n  }\\n  \\n  .frequency-section {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    text-align: center;\\n    width: 100%;\\n  }\\n\\n  .volume-bar-container {\\n    width: 100%;\\n    height: 20px;\\n    background-color: #e5e7eb;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .volume-bar {\\n    height: 100%;\\n    background-color: #2563eb;\\n    border-radius: 10px;\\n    transition: width 0.1s ease;\\n  }\\n\\n  .volume-text {\\n    text-align: center;\\n    font-weight: 600;\\n    color: var(--color-gray-700);\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .frequency-display {\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .frequency-value {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin-bottom: var(--space-1);\\n  }\\n\\n  .note-value {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-700);\\n  }\\n\\n  .volume-status,\\n  .frequency-status {\\n    text-align: center;\\n    min-height: 24px;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n\\n  .status-pending {\\n    color: var(--color-gray-600);\\n  }\\n\\n  /* ノイズリダクション効果表示 */\\n  .noise-reduction-info {\\n    margin: var(--space-3) 0;\\n    padding: var(--space-3);\\n    background-color: #f8fafc;\\n    border-radius: 8px;\\n    border: 1px solid #e2e8f0;\\n  }\\n\\n  .noise-stats {\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-2);\\n  }\\n\\n  .stat-item {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    font-size: var(--text-sm);\\n  }\\n\\n  .stat-label {\\n    color: var(--color-gray-600);\\n    font-weight: 500;\\n  }\\n\\n  .stat-value {\\n    font-weight: 600;\\n    font-family: 'Monaco', 'Menlo', monospace;\\n  }\\n\\n  .stat-value.raw {\\n    color: #dc2626; /* 赤: フィルター前（ノイズ含む） */\\n  }\\n\\n  .stat-value.filtered {\\n    color: #2563eb; /* 青: フィルター後（クリーン） */\\n  }\\n\\n  .stat-value.reduction {\\n    color: #059669; /* 緑: 削減効果 */\\n    font-weight: 700;\\n  }\\n\\n  .start-content {\\n    text-align: center;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .mic-test-header {\\n      flex-direction: row;\\n      text-align: left;\\n    }\\n\\n    .test-section {\\n      flex-direction: row;\\n      align-items: stretch;\\n    }\\n    \\n    .test-section > :global(.card) {\\n      flex: 1;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_page;
  validate_store(page, "page");
  $$unsubscribe_page = subscribe(page, (value) => value);
  let micPermission = "initial";
  let currentVolume = 0;
  let currentNote = "ーー";
  let pitchDetectorComponent = null;
  function stopListening() {
    console.log("🛑 [MicTest] リスニング停止開始");
    if (pitchDetectorComponent) {
      pitchDetectorComponent.stopDetection();
      console.log("✅ [MicTest] PitchDetector検出停止");
    }
    console.log("✅ [MicTest] リスニング停止完了");
  }
  onDestroy(() => {
    stopListening();
  });
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `${$$result.head += `<!-- HEAD_svelte-8st1fo_START -->${$$result.title = `<title>マイクテスト - 相対音感トレーニング</title>`, ""}<!-- HEAD_svelte-8st1fo_END -->`, ""} ${validate_component(PageLayout, "PageLayout").$$render($$result, { showBackButton: true }, {}, {
      default: () => {
        return ` <div style="display: none;">${validate_component(PitchDetector_1, "PitchDetector").$$render(
          $$result,
          {
            isActive: micPermission === "granted",
            debugMode: true,
            this: pitchDetectorComponent
          },
          {
            this: ($$value) => {
              pitchDetectorComponent = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div> <div class="microphone-test svelte-19mrh3"> <div class="header svelte-19mrh3"><div class="mic-test-header svelte-19mrh3"><div class="mic-icon svelte-19mrh3"><svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" x2="12" y1="19" y2="22"></line><line x1="8" x2="16" y1="22" y2="22"></line></svg></div> <div><h1 class="mic-test-title svelte-19mrh3" data-svelte-h="svelte-z7m4lk">マイクテスト</h1> <p class="mic-test-description svelte-19mrh3" data-svelte-h="svelte-1vtv92f">音感トレーニングを始める前に、マイクの動作を確認します</p></div></div></div>  <div class="training-mode-info svelte-19mrh3">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
          default: () => {
            return `<div class="training-mode-content svelte-19mrh3">${` ${` <h3 class="instructions-title svelte-19mrh3" data-svelte-h="svelte-gfi16f">マイクのテストを開始します</h3> <p class="instructions-description svelte-19mrh3" data-svelte-h="svelte-1w19y1h">マイクテスト開始ボタンを押してマイクの使用を許可してください</p>`} ${`${`${`<div class="mic-test-button-area svelte-19mrh3"><button class="mic-test-button start svelte-19mrh3" data-svelte-h="svelte-caex95">マイクテストを開始</button></div>`}`}`}`}</div>`;
          }
        })}</div>  <div class="test-section svelte-19mrh3"> ${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
          default: () => {
            return `<div class="card-inner svelte-19mrh3"><div class="volume-section svelte-19mrh3"><h3 class="display-title svelte-19mrh3" data-svelte-h="svelte-1nc8gri">音量レベル</h3> <div class="volume-bar-container svelte-19mrh3"><div class="volume-bar svelte-19mrh3" style="${"width: " + escape(currentVolume, true) + "%"}"></div></div> <div class="volume-text svelte-19mrh3">${escape(currentVolume.toFixed(1))}%</div>  ${``} <div class="volume-status svelte-19mrh3"><span class="status-pending svelte-19mrh3">${` `}</span></div></div></div>`;
          }
        })}  ${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
          default: () => {
            return `<div class="card-inner svelte-19mrh3"><div class="frequency-section svelte-19mrh3"><h3 class="display-title svelte-19mrh3" data-svelte-h="svelte-1ofzoy2">音程検出</h3> <div class="frequency-display svelte-19mrh3"><div class="frequency-value svelte-19mrh3">${escape("ーー")}</div> <div class="note-value svelte-19mrh3">${escape(currentNote)}</div></div> <div class="frequency-status svelte-19mrh3"><span class="status-pending svelte-19mrh3">${` `}</span></div></div></div>`;
          }
        })}</div></div>`;
      }
    })}`;
  } while (!$$settled);
  $$unsubscribe_page();
  return $$rendered;
});
export {
  Page as default
};
