import { c as create_ssr_component, a as subscribe, v as validate_component } from "../../../chunks/ssr.js";
import { p as page } from "../../../chunks/stores.js";
import "@sveltejs/kit/internal";
import "../../../chunks/exports.js";
import { P as PageLayout, C as Card } from "../../../chunks/PageLayout.js";
import { P as PitchDetectionDisplay, a as PitchDetector_1 } from "../../../chunks/PitchDetectionDisplay.js";
const css = {
  code: ".microphone-test.svelte-prem1.svelte-prem1{max-width:800px;margin:0 auto;display:flex;flex-direction:column;gap:var(--space-6)}.header.svelte-prem1.svelte-prem1{text-align:center}.mic-test-header.svelte-prem1.svelte-prem1{display:flex;align-items:center;justify-content:center;gap:var(--space-4);margin-bottom:var(--space-4)}.mic-icon.svelte-prem1.svelte-prem1{width:64px;height:64px;border-radius:50%;background-color:#dbeafe;color:#2563eb;display:flex;align-items:center;justify-content:center;flex-shrink:0}.mic-test-title.svelte-prem1.svelte-prem1{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.mic-test-description.svelte-prem1.svelte-prem1{font-size:var(--text-base);color:var(--color-gray-600);margin:0}.training-mode-info.svelte-prem1.svelte-prem1{margin-bottom:var(--space-6)}.training-mode-content.svelte-prem1.svelte-prem1{text-align:center}.instructions-title.svelte-prem1.svelte-prem1{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.instructions-description.svelte-prem1.svelte-prem1{font-size:var(--text-sm);color:var(--color-gray-600);margin:0;text-align:center}.status-text.svelte-prem1.svelte-prem1{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:var(--space-6) 0;text-align:center}.ready-title.svelte-prem1.svelte-prem1{font-size:var(--text-xl);font-weight:600;color:#2563eb;margin:var(--space-4) 0 var(--space-2) 0;text-align:center}.ready-description.svelte-prem1.svelte-prem1{font-size:var(--text-sm);color:var(--color-gray-600);margin:0 0 var(--space-6) 0;text-align:center}.mic-test-button-area.svelte-prem1.svelte-prem1,.training-start-button-area.svelte-prem1.svelte-prem1{margin-top:var(--space-6);display:flex;justify-content:center}.mic-test-button.svelte-prem1.svelte-prem1{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px}.mic-test-button.start.svelte-prem1.svelte-prem1{background-color:#2563eb;color:white}.mic-test-button.start.svelte-prem1.svelte-prem1:hover{background-color:#1d4ed8}.mic-test-button.retry.svelte-prem1.svelte-prem1{background-color:#dc2626;color:white}.mic-test-button.retry.svelte-prem1.svelte-prem1:hover{background-color:#b91c1c}.training-start-button.svelte-prem1.svelte-prem1{max-width:300px;width:100%;padding:12px 16px;border:none;border-radius:8px;font-size:14px;font-weight:500;cursor:pointer;transition:background-color 0.2s ease-in-out;display:flex;align-items:center;justify-content:center;gap:8px;background-color:#059669;color:white}.training-start-button.enabled.svelte-prem1.svelte-prem1:hover{background-color:#047857}.device-info.svelte-prem1.svelte-prem1{text-align:center;margin-bottom:var(--space-4)}.device-label.svelte-prem1.svelte-prem1{background-color:#dbeafe;color:#1e40af;padding:4px 12px;border-radius:16px;font-size:var(--text-sm);font-weight:500}.volume-controls.svelte-prem1.svelte-prem1{background-color:#f8fafc;border:1px solid #e2e8f0;border-radius:8px;padding:var(--space-4);margin:var(--space-4) 0}.volume-control-section.svelte-prem1.svelte-prem1{margin-bottom:var(--space-4)}.volume-control-section.svelte-prem1.svelte-prem1:last-child{margin-bottom:0}.volume-label.svelte-prem1.svelte-prem1{display:block;font-size:var(--text-sm);font-weight:600;color:#374151;margin-bottom:var(--space-2);text-align:center}.volume-slider-container.svelte-prem1.svelte-prem1{display:flex;align-items:center;gap:var(--space-2);margin-bottom:var(--space-3)}.slider-min.svelte-prem1.svelte-prem1,.slider-max.svelte-prem1.svelte-prem1{font-size:var(--text-xs);color:#6b7280;min-width:32px;text-align:center}.volume-slider.svelte-prem1.svelte-prem1{flex:1;-webkit-appearance:none;appearance:none;height:6px;background:#e5e7eb;border-radius:3px;outline:none}.volume-slider.svelte-prem1.svelte-prem1::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:20px;height:20px;background:#3b82f6;border-radius:50%;cursor:pointer;box-shadow:0 2px 4px rgba(0,0,0,0.2)}.volume-slider.svelte-prem1.svelte-prem1::-moz-range-thumb{width:20px;height:20px;background:#3b82f6;border-radius:50%;cursor:pointer;border:none;box-shadow:0 2px 4px rgba(0,0,0,0.2)}.base-tone-test-button.svelte-prem1.svelte-prem1{width:100%;padding:var(--space-2) var(--space-4);background-color:#059669;color:white;border:none;border-radius:6px;font-size:var(--text-sm);font-weight:500;cursor:pointer;transition:background-color 0.2s}.base-tone-test-button.svelte-prem1.svelte-prem1:hover:not(:disabled){background-color:#047857}.base-tone-test-button.svelte-prem1.svelte-prem1:disabled{background-color:#9ca3af;cursor:not-allowed}.ready-title.svelte-prem1.svelte-prem1{color:#059669;font-size:var(--text-lg);font-weight:600;text-align:center;margin-bottom:var(--space-2)}.ready-description.svelte-prem1.svelte-prem1{color:#6b7280;text-align:center;margin-bottom:var(--space-4)}.preset-section.svelte-prem1.svelte-prem1{background-color:#fef3c7;border:1px solid #f59e0b;border-radius:8px;padding:var(--space-4);margin:var(--space-4) 0;text-align:center}.preset-title.svelte-prem1.svelte-prem1{font-size:var(--text-sm);font-weight:600;color:#92400e;margin:0 0 var(--space-3) 0}.preset-buttons.svelte-prem1.svelte-prem1{display:flex;gap:var(--space-3);justify-content:center}.preset-button.svelte-prem1.svelte-prem1{padding:var(--space-2) var(--space-3);background-color:#f59e0b;color:white;border:none;border-radius:6px;font-size:var(--text-sm);font-weight:500;cursor:pointer;transition:background-color 0.2s}.preset-button.svelte-prem1.svelte-prem1:hover{background-color:#d97706}.preset-button.svelte-prem1.svelte-prem1:active{background-color:#b45309}.preset-specs.svelte-prem1.svelte-prem1{margin-top:var(--space-2);text-align:center}.preset-specs.svelte-prem1 small.svelte-prem1{color:#92400e;font-size:var(--text-xs);font-family:monospace}@media(min-width: 768px){.mic-test-header.svelte-prem1.svelte-prem1{flex-direction:row;text-align:left}}.main-card{border:1px solid hsl(214.3 31.8% 91.4%) !important;background:hsl(0 0% 100%) !important;border-radius:8px !important;box-shadow:0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px 0 rgb(0 0 0 / 0.06) !important;margin-bottom:1.5rem}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { page } from '$app/stores';\\n  import { goto } from '$app/navigation';\\n  import { base } from '$app/paths';\\n  import Card from '$lib/components/Card.svelte';\\n  import Button from '$lib/components/Button.svelte';\\n  import PageLayout from '$lib/components/PageLayout.svelte';\\n  import PitchDetector from '$lib/components/PitchDetector.svelte';\\n  import PitchDetectionDisplay from '$lib/components/PitchDetectionDisplay.svelte';\\n  import VolumeBar from '$lib/components/VolumeBar.svelte';\\n  import { audioManager } from '$lib/audio/AudioManager.js';\\n  \\n  // URL パラメータから mode を取得\\n  let mode = 'random';\\n  \\n  onMount(() => {\\n    if ($page.url.searchParams.has('mode')) {\\n      mode = $page.url.searchParams.get('mode') || 'random';\\n    }\\n  });\\n\\n  // マイクテスト状態管理（シンプル版）\\n  let micPermission = 'initial'; // 'initial' | 'pending' | 'granted' | 'denied'\\n\\n  // 音程検出\\n  let currentVolume = 0;\\n  let currentFrequency = 0;\\n  let detectedNote = 'ーー';\\n  let pitchDetectorComponent = null;\\n\\n  // 音量調整機能\\n  let baseToneVolume = 0; // -20dB ～ +10dB\\n  let micSensitivity = 3.0; // iPad対応: 初期値を高めに設定\\n  let sampler = null;\\n  let isBaseTonePlaying = false;\\n\\n  // デバイス検出（AudioManager統一版）\\n  let deviceInfo = '';\\n  let platformSpecs = null;\\n  \\n  onMount(() => {\\n    // AudioManagerから統一設定を取得\\n    platformSpecs = audioManager.getPlatformSpecs();\\n    deviceInfo = \`\${platformSpecs.deviceType}検出\`;\\n    baseToneVolume = 20; // テスト用: 極端に大きい値\\n    \\n    console.log(\`🔍 [MicTest] デバイス情報: \${deviceInfo}\`, navigator.userAgent);\\n    console.log(\`🔍 [MicTest] タッチサポート: \${'ontouchend' in document}\`);\\n    console.log(\`📊 [MicTest] プラットフォーム仕様適用: divisor=\${platformSpecs.divisor}, gain=\${platformSpecs.gainCompensation}\`);\\n  });\\n\\n  // トレーニングモード設定\\n  const trainingModes = {\\n    random: {\\n      name: 'ランダム基音モード',\\n      description: '10種類の基音からランダムに選択してトレーニング',\\n      color: 'green',\\n      path: '/training/random'\\n    },\\n    continuous: {\\n      name: '連続チャレンジモード',\\n      description: '選択した回数だけ連続で実行し、総合評価を確認',\\n      color: 'orange',\\n      path: '/training/continuous'\\n    },\\n    chromatic: {\\n      name: '12音階モード',\\n      description: 'クロマチックスケールの上行・下行で完全制覇',\\n      color: 'purple',\\n      path: '/training/chromatic'\\n    }\\n  };\\n\\n  const selectedMode = trainingModes[mode] || trainingModes.random;\\n  \\n  // マイク許可確認（シンプル版 - ランダム基音ページから移植）\\n  async function requestMicrophone() {\\n    micPermission = 'pending';\\n    \\n    try {\\n      console.log('🎤 [MicTest] マイク許可リクエスト開始');\\n      \\n      if (!navigator.mediaDevices?.getUserMedia) {\\n        micPermission = 'denied';\\n        console.error('❌ [MicTest] getUserMediaがサポートされていません');\\n        return;\\n      }\\n      \\n      // AudioManagerから共有リソースを取得（初回のみマイク許可ダイアログ表示）\\n      const resources = await audioManager.initialize();\\n      console.log('✅ [MicTest] AudioManager リソース取得完了');\\n      \\n      // マイク許可が取得できたことを確認\\n      if (resources.mediaStream && resources.audioContext) {\\n        micPermission = 'granted';\\n        console.log('✅ [MicTest] マイク許可完了');\\n        \\n        // AudioContext状態確認・再開（マイク・基音両方に必要）\\n        await ensureAudioContextRunning();\\n        \\n        // 基音テスト初期化\\n        await onMicrophoneGranted();\\n        \\n        // PitchDetector初期化（マイク許可後）\\n        // Safari対応: より長い待機時間でMediaStream安定化\\n        setTimeout(async () => {\\n          if (pitchDetectorComponent) {\\n            console.log('🎙️ [MicTest] PitchDetector初期化開始');\\n            \\n            // PitchDetector初期化前にもAudioContext再開確認\\n            await ensureAudioContextRunning();\\n            \\n            await pitchDetectorComponent.initialize();\\n            console.log('✅ [MicTest] PitchDetector初期化完了');\\n            \\n            // リアクティブなisActiveで自動検出開始されるため手動呼び出し不要\\n            console.log('🎯 [MicTest] PitchDetector isActiveリアクティブで自動検出開始');\\n          }\\n        }, 1000);\\n      } else {\\n        throw new Error('リソース取得失敗');\\n      }\\n      \\n    } catch (error) {\\n      console.error('❌ [MicTest] マイク許可エラー:', error);\\n      micPermission = (error?.name === 'NotAllowedError') ? 'denied' : 'denied';\\n    }\\n  }\\n  \\n  // トレーニング開始関数\\n  function startTraining() {\\n    console.log('🚀 [MicTest] トレーニング開始 - ランダム基音モードへ遷移');\\n    // マイクテスト完了フラグを保存\\n    localStorage.setItem('mic-test-completed', 'true');\\n    console.log('✅ [MicTest] マイクテスト完了フラグを保存');\\n    goto(\`\${base}\${selectedMode.path}?from=microphone-test\`);\\n  }\\n\\n  // PitchDetectorコンポーネントからのイベントハンドラー\\n  function handlePitchUpdate(event) {\\n    const { frequency, note, volume, rawVolume, clarity } = event.detail;\\n    \\n    currentFrequency = frequency;\\n    detectedNote = note;\\n    currentVolume = volume;\\n  }\\n  \\n  function handlePitchDetectorStateChange(event) {\\n    // ログ削除（シンプル版）\\n  }\\n  \\n  function handlePitchDetectorError(event) {\\n    console.error('❌ [MicTest] PitchDetectorエラー:', event.detail);\\n    \\n    const { error, reason, recovery } = event.detail;\\n    \\n    // MediaStream終了エラーの場合は自動復旧を試行\\n    if (reason === 'mediastream_ended' && recovery === 'restart_required') {\\n      console.log('🔄 [MicTest] MediaStream終了検出 - 自動復旧開始');\\n      \\n      // マイク許可状態をリセット\\n      micPermission = 'initial';\\n      \\n      // 検出データをリセット\\n      currentVolume = 0;\\n      currentFrequency = 0;\\n      detectedNote = 'ーー';\\n      \\n      // ユーザーに再許可を促すメッセージ（自動的に表示される）\\n      console.log('⚠️ [MicTest] マイク再許可が必要です');\\n    }\\n  }\\n\\n  // 基音テスト機能\\n  async function initializeBaseToneTest() {\\n    try {\\n      console.log('🎹 [MicTest] 基音テスト初期化開始');\\n      \\n      // Tone.js動的読み込み\\n      if (typeof window !== 'undefined') {\\n        if (!window.Tone) {\\n          console.log('📦 [MicTest] Tone.js動的読み込み開始');\\n          const script = document.createElement('script');\\n          script.src = 'https://unpkg.com/tone@latest/build/Tone.js';\\n          document.head.appendChild(script);\\n          \\n          // Tone.js読み込み完了を待機\\n          await new Promise((resolve, reject) => {\\n            script.onload = resolve;\\n            script.onerror = reject;\\n          });\\n          console.log('✅ [MicTest] Tone.js読み込み完了');\\n        }\\n        \\n        await window.Tone.start();\\n        \\n        // Salamander Grand Piano サンプラー\\n        sampler = new window.Tone.Sampler({\\n          urls: { \\"C4\\": \\"C4.mp3\\" },\\n          baseUrl: \\"https://tonejs.github.io/audio/salamander/\\",\\n          release: 1.5,\\n          volume: 20, // テスト用: 極端に大きい値で変化を確認\\n          onload: () => {\\n            console.log('✅ [MicTest] 基音サンプラー読み込み完了');\\n          },\\n          onerror: (error) => {\\n            console.error('❌ [MicTest] 基音サンプラー読み込みエラー:', error);\\n          }\\n        }).toDestination();\\n        \\n        // 初期音量設定\\n        // updateBaseToneVolume(); // コメントアウト: 初期化時の volume: 20 を維持\\n        console.log('🔊 [MicTest] 初期音量維持: 20dB');\\n        \\n      } else {\\n        console.warn('⚠️ [MicTest] window未定義 - 基音テスト無効');\\n      }\\n    } catch (error) {\\n      console.error('❌ [MicTest] 基音テスト初期化エラー:', error);\\n    }\\n  }\\n\\n  // 基音音量更新\\n  function updateBaseToneVolume() {\\n    if (sampler) {\\n      sampler.volume.value = baseToneVolume;\\n      console.log(\`🔊 [MicTest] 基音音量設定: \${baseToneVolume}dB\`);\\n    }\\n  }\\n\\n  // AudioContext状態確認・再開処理\\n  async function ensureAudioContextRunning() {\\n    if (typeof window !== 'undefined' && window.Tone) {\\n      const context = window.Tone.context || window.Tone.getContext();\\n      if (context && context.state === 'suspended') {\\n        console.log('🔄 [MicTest] AudioContext suspended検出 - 再開中...');\\n        await context.resume();\\n        console.log('✅ [MicTest] AudioContext再開完了');\\n        return true; // 再開実行\\n      }\\n    }\\n    return false; // 再開不要\\n  }\\n\\n  // 基音再生テスト\\n  async function playBaseTone() {\\n    if (!sampler || isBaseTonePlaying) return;\\n    \\n    try {\\n      isBaseTonePlaying = true;\\n      console.log('🎵 [MicTest] 基音再生開始: C4');\\n      \\n      // AudioContext状態確認・再開\\n      const wasResumed = await ensureAudioContextRunning();\\n      if (wasResumed) {\\n        console.log('🔊 [MicTest] AudioContext再開後に基音再生実行');\\n      }\\n      \\n      await sampler.triggerAttackRelease('C4', 2, window.Tone.now(), 0.7);\\n      \\n      // 2秒後に再生状態をリセット\\n      setTimeout(() => {\\n        isBaseTonePlaying = false;\\n        console.log('✅ [MicTest] 基音再生完了');\\n      }, 2000);\\n      \\n    } catch (error) {\\n      console.error('❌ [MicTest] 基音再生エラー:', error);\\n      isBaseTonePlaying = false;\\n    }\\n  }\\n\\n  // マイク感度調整\\n  function updateMicSensitivity() {\\n    try {\\n      // AudioManagerの感度調整\\n      audioManager.setSensitivity(micSensitivity);\\n      console.log(\`🎤 [MicTest] マイク感度更新完了: \${micSensitivity}x\`);\\n    } catch (error) {\\n      console.error('❌ [MicTest] マイク感度調整エラー:', error);\\n    }\\n  }\\n\\n  // プリセット適用機能（仕様書準拠）\\n  function applyPreset(presetType) {\\n    // AudioManagerから仕様書準拠の設定を取得\\n    const platformSpecs = audioManager.getPlatformSpecs();\\n    \\n    switch (presetType) {\\n      case 'ipad-high':\\n        // 仕様書準拠 + 高感度設定\\n        baseToneVolume = 3; // +3dB（適度なブースト）\\n        // 仕様書のgainCompensation (1.5) + ユーザー調整 (2.0) = 3.0x\\n        micSensitivity = platformSpecs.gainCompensation * 2.0; // 3.0x\\n        break;\\n      case 'ipad-extreme':\\n        // 仕様書準拠 + 超高感度設定\\n        baseToneVolume = 7; // +7dB（強力ブースト）\\n        // 仕様書のgainCompensation (1.5) + 極限調整 (4.0) = 6.0x\\n        micSensitivity = platformSpecs.gainCompensation * 4.0; // 6.0x\\n        break;\\n      default:\\n        return;\\n    }\\n    \\n    // 設定を即座に適用\\n    updateBaseToneVolume();\\n    updateMicSensitivity();\\n    \\n    console.log(\`🎯 [MicTest] \${presetType} プリセット適用: 基音\${baseToneVolume}dB, マイク\${micSensitivity}x\`);\\n    console.log(\`📊 [MicTest] プラットフォーム仕様: divisor=\${platformSpecs.divisor}, gainCompensation=\${platformSpecs.gainCompensation}, デバイス=\${platformSpecs.deviceType}\`);\\n  }\\n\\n  // マイク許可完了時の処理を拡張\\n  async function onMicrophoneGranted() {\\n    // 基音テスト初期化\\n    await initializeBaseToneTest();\\n    \\n    // iPadマイク安定化処理\\n    if (platformSpecs && (platformSpecs.deviceType === 'iPad')) {\\n      console.log('🔧 [MicTest] iPad検出 - マイク感度5.0x自動設定開始');\\n      \\n      // iPad専用: 5.0x感度で安定化\\n      micSensitivity = 5.0;\\n      updateMicSensitivity();\\n      \\n      console.log('✅ [MicTest] iPad マイク感度5.0x自動設定完了');\\n      \\n      // AudioManager再初期化でマイク接続安定化\\n      try {\\n        await audioManager.initialize();\\n        console.log('🔄 [MicTest] iPad用AudioManager再初期化完了');\\n      } catch (error) {\\n        console.warn('⚠️ [MicTest] AudioManager再初期化エラー:', error);\\n      }\\n    } else {\\n      // 通常デバイス: AudioManagerから現在のマイク感度を取得\\n      try {\\n        micSensitivity = audioManager.getSensitivity();\\n        console.log(\`🎤 [MicTest] 現在のマイク感度取得: \${micSensitivity}x\`);\\n      } catch (error) {\\n        console.warn('⚠️ [MicTest] マイク感度取得エラー:', error);\\n      }\\n    }\\n  }\\n<\/script>\\n\\n<svelte:head>\\n  <title>マイクテスト - 相対音感トレーニング</title>\\n</svelte:head>\\n\\n<PageLayout showBackButton={true}>\\n  <div class=\\"microphone-test\\">\\n    <!-- ヘッダー -->\\n    <div class=\\"header\\">\\n      <div class=\\"mic-test-header\\">\\n        <div class=\\"mic-icon\\">\\n          <svg width=\\"48\\" height=\\"48\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\\"/>\\n            <path d=\\"M19 10v2a7 7 0 0 1-14 0v-2\\"/>\\n            <line x1=\\"12\\" x2=\\"12\\" y1=\\"19\\" y2=\\"22\\"/>\\n            <line x1=\\"8\\" x2=\\"16\\" y1=\\"22\\" y2=\\"22\\"/>\\n          </svg>\\n        </div>\\n        <div>\\n          <h1 class=\\"mic-test-title\\">マイクテスト</h1>\\n          <p class=\\"mic-test-description\\">音感トレーニングを始める前に、マイクの動作を確認します</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- トレーニングモード情報 -->\\n    <div class=\\"training-mode-info\\">\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"training-mode-content\\">\\n          {#if micPermission === 'granted'}\\n            <!-- マイク許可完了 - 音量調整エリア -->\\n            <h3 class=\\"ready-title\\">マイク準備完了</h3>\\n            <p class=\\"ready-description\\">音量を調整してからトレーニングを開始してください</p>\\n            \\n            <!-- デバイス情報表示（調査用） -->\\n            <div class=\\"device-info\\">\\n              <span class=\\"device-label\\">{deviceInfo}</span>\\n            </div>\\n            \\n            <!-- デバイス専用プリセットボタン -->\\n            {#if platformSpecs && (platformSpecs.isIOS || deviceInfo.includes('その他'))}\\n              <div class=\\"preset-section\\">\\n                <h4 class=\\"preset-title\\">\\n                  {platformSpecs.isIOS ? \`\${platformSpecs.deviceType}専用設定\` : '高感度設定（テスト用）'}\\n                </h4>\\n                <div class=\\"preset-buttons\\">\\n                  <button class=\\"preset-button\\" on:click={() => applyPreset('ipad-high')}>\\n                    高感度設定\\n                  </button>\\n                  <button class=\\"preset-button\\" on:click={() => applyPreset('ipad-extreme')}>\\n                    超高感度設定\\n                  </button>\\n                </div>\\n                <div class=\\"preset-specs\\">\\n                  <small>仕様書準拠: divisor={platformSpecs?.divisor}, gain={platformSpecs?.gainCompensation}x</small>\\n                </div>\\n              </div>\\n            {/if}\\n            \\n            <!-- 音量調整コントロール -->\\n            <div class=\\"volume-controls\\">\\n              <!-- 基音音量調整 -->\\n              <div class=\\"volume-control-section\\">\\n                <label class=\\"volume-label\\">\\n                  基音音量: {baseToneVolume}dB\\n                </label>\\n                <div class=\\"volume-slider-container\\">\\n                  <span class=\\"slider-min\\">-20dB</span>\\n                  <input \\n                    type=\\"range\\" \\n                    min=\\"-20\\" \\n                    max=\\"10\\" \\n                    step=\\"1\\"\\n                    bind:value={baseToneVolume}\\n                    on:input={updateBaseToneVolume}\\n                    class=\\"volume-slider\\"\\n                  />\\n                  <span class=\\"slider-max\\">+10dB</span>\\n                </div>\\n                <button \\n                  class=\\"base-tone-test-button\\"\\n                  on:click={playBaseTone}\\n                  disabled={isBaseTonePlaying}\\n                >\\n                  {isBaseTonePlaying ? '再生中...' : 'ド(C4)を再生'}\\n                </button>\\n              </div>\\n              \\n              <!-- マイク感度調整 -->\\n              <div class=\\"volume-control-section\\">\\n                <label class=\\"volume-label\\">\\n                  マイク感度: {micSensitivity.toFixed(1)}x\\n                </label>\\n                <div class=\\"volume-slider-container\\">\\n                  <span class=\\"slider-min\\">0.1x</span>\\n                  <input \\n                    type=\\"range\\" \\n                    min=\\"0.1\\" \\n                    max=\\"10.0\\" \\n                    step=\\"0.1\\"\\n                    bind:value={micSensitivity}\\n                    on:input={updateMicSensitivity}\\n                    class=\\"volume-slider\\"\\n                  />\\n                  <span class=\\"slider-max\\">10.0x</span>\\n                </div>\\n              </div>\\n            </div>\\n            \\n            <div class=\\"training-start-button-area\\">\\n              <button class=\\"training-start-button enabled\\" on:click={startTraining}>\\n                トレーニング開始\\n              </button>\\n            </div>\\n          {:else}\\n            <!-- マイクテスト説明 -->\\n            <h3 class=\\"instructions-title\\">マイクのテストを開始します</h3>\\n            <p class=\\"instructions-description\\">マイクテスト開始ボタンを押してマイクの使用を許可してください</p>\\n            \\n            {#if micPermission === 'pending'}\\n              <p class=\\"status-text\\">マイク準備中...</p>\\n            {:else if micPermission === 'denied'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button retry\\" on:click={requestMicrophone}>\\n                  マイク許可を再試行\\n                </button>\\n              </div>\\n            {:else if micPermission === 'initial'}\\n              <div class=\\"mic-test-button-area\\">\\n                <button class=\\"mic-test-button start\\" on:click={requestMicrophone}>\\n                  マイクテストを開始\\n                </button>\\n              </div>\\n            {/if}\\n          {/if}\\n        </div>\\n      </Card>\\n    </div>\\n\\n    <!-- リアルタイム音程検出エリア（常時表示） -->\\n    <PitchDetectionDisplay\\n      frequency={currentFrequency}\\n      note={detectedNote}\\n      volume={currentVolume}\\n      isMuted={micPermission !== 'granted'}\\n      muteMessage=\\"マイク許可後に開始\\"\\n    />\\n    \\n    <!-- PitchDetectorコンポーネント（非表示・検出処理のみ） -->\\n    <div style=\\"display: none;\\">\\n      <PitchDetector\\n        bind:this={pitchDetectorComponent}\\n        isActive={micPermission === 'granted'}\\n        on:pitchUpdate={handlePitchUpdate}\\n        on:stateChange={handlePitchDetectorStateChange}\\n        on:error={handlePitchDetectorError}\\n        className=\\"pitch-detector-content\\"\\n        debugMode={false}\\n      />\\n    </div>\\n\\n  </div>\\n</PageLayout>\\n\\n<style>\\n  .microphone-test {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-6);\\n  }\\n\\n  .header {\\n    text-align: center;\\n  }\\n\\n  .mic-test-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: var(--space-4);\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .mic-icon {\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #dbeafe;\\n    color: #2563eb;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n  }\\n\\n  .mic-test-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .mic-test-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .training-mode-info {\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .training-mode-content {\\n    text-align: center;\\n  }\\n\\n  .training-mode-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .training-mode-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .mic-test-instructions {\\n    text-align: center;\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .instructions-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .instructions-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n    text-align: center;\\n  }\\n\\n  .status-text {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .status-text.voice-instruction {\\n    color: #2563eb;\\n    font-size: var(--text-xl);\\n    font-weight: 700;\\n  }\\n\\n  .ready-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: #2563eb;\\n    margin: var(--space-4) 0 var(--space-2) 0;\\n    text-align: center;\\n  }\\n\\n  .ready-description {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n    text-align: center;\\n  }\\n\\n  .mic-test-button-area,\\n  .training-start-button-area {\\n    margin-top: var(--space-6);\\n    display: flex;\\n    justify-content: center;\\n  }\\n\\n  .mic-test-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .mic-test-button.start {\\n    background-color: #2563eb;\\n    color: white;\\n  }\\n\\n  .mic-test-button.start:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .mic-test-button.preparing {\\n    background-color: #f59e0b;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.confirming {\\n    background-color: #8b5cf6;\\n    color: white;\\n    cursor: not-allowed;\\n  }\\n\\n  .mic-test-button.retry {\\n    background-color: #dc2626;\\n    color: white;\\n  }\\n\\n  .mic-test-button.retry:hover {\\n    background-color: #b91c1c;\\n  }\\n\\n  .training-start-button {\\n    max-width: 300px;\\n    width: 100%;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-start-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .mic-status-granted {\\n    margin-bottom: var(--space-4);\\n    text-align: center;\\n  }\\n\\n  .status-indicator.success {\\n    background-color: #d1fae5;\\n    color: #065f46;\\n    border: 1px solid #34d399;\\n  }\\n\\n  .mic-test-content {\\n    text-align: center;\\n  }\\n\\n  .mic-status {\\n    margin-bottom: var(--space-6);\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-2);\\n  }\\n\\n  .status-indicator {\\n    padding: var(--space-3);\\n    border-radius: 8px;\\n    font-weight: 600;\\n    font-size: var(--text-sm);\\n  }\\n\\n  .status-indicator.pending {\\n    background-color: #fef3c7;\\n    color: #92400e;\\n    border: 1px solid #fcd34d;\\n  }\\n\\n\\n  .status-indicator.error {\\n    background-color: #fee2e2;\\n    color: #991b1b;\\n    border: 1px solid #fca5a5;\\n  }\\n\\n  .start-button,\\n  .retry-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    background-color: #2563eb;\\n    color: white;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .start-button:hover,\\n  .retry-button:hover {\\n    background-color: #1d4ed8;\\n  }\\n\\n  .training-button {\\n    max-width: 300px;\\n    width: 100%;\\n    margin: 0 auto;\\n    padding: 12px 16px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 14px;\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s ease-in-out;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n\\n  .training-button.enabled {\\n    background-color: #059669;\\n    color: white;\\n  }\\n\\n  .training-button.enabled:hover {\\n    background-color: #047857;\\n  }\\n\\n  .training-button.disabled {\\n    background-color: #f3f4f6;\\n    color: #9ca3af;\\n    cursor: not-allowed;\\n  }\\n\\n  .guidance-text {\\n    font-size: var(--text-sm);\\n    color: #2563eb;\\n    font-weight: 600;\\n    margin-bottom: var(--space-2);\\n    text-align: center;\\n  }\\n\\n  /* 音量調整機能のスタイル */\\n  .device-info {\\n    text-align: center;\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .device-label {\\n    background-color: #dbeafe;\\n    color: #1e40af;\\n    padding: 4px 12px;\\n    border-radius: 16px;\\n    font-size: var(--text-sm);\\n    font-weight: 500;\\n  }\\n\\n  .volume-controls {\\n    background-color: #f8fafc;\\n    border: 1px solid #e2e8f0;\\n    border-radius: 8px;\\n    padding: var(--space-4);\\n    margin: var(--space-4) 0;\\n  }\\n\\n  .volume-control-section {\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .volume-control-section:last-child {\\n    margin-bottom: 0;\\n  }\\n\\n  .volume-label {\\n    display: block;\\n    font-size: var(--text-sm);\\n    font-weight: 600;\\n    color: #374151;\\n    margin-bottom: var(--space-2);\\n    text-align: center;\\n  }\\n\\n  .volume-slider-container {\\n    display: flex;\\n    align-items: center;\\n    gap: var(--space-2);\\n    margin-bottom: var(--space-3);\\n  }\\n\\n  .slider-min,\\n  .slider-max {\\n    font-size: var(--text-xs);\\n    color: #6b7280;\\n    min-width: 32px;\\n    text-align: center;\\n  }\\n\\n  .volume-slider {\\n    flex: 1;\\n    -webkit-appearance: none;\\n    appearance: none;\\n    height: 6px;\\n    background: #e5e7eb;\\n    border-radius: 3px;\\n    outline: none;\\n  }\\n\\n  .volume-slider::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    appearance: none;\\n    width: 20px;\\n    height: 20px;\\n    background: #3b82f6;\\n    border-radius: 50%;\\n    cursor: pointer;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n  }\\n\\n  .volume-slider::-moz-range-thumb {\\n    width: 20px;\\n    height: 20px;\\n    background: #3b82f6;\\n    border-radius: 50%;\\n    cursor: pointer;\\n    border: none;\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\n  }\\n\\n  .base-tone-test-button {\\n    width: 100%;\\n    padding: var(--space-2) var(--space-4);\\n    background-color: #059669;\\n    color: white;\\n    border: none;\\n    border-radius: 6px;\\n    font-size: var(--text-sm);\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s;\\n  }\\n\\n  .base-tone-test-button:hover:not(:disabled) {\\n    background-color: #047857;\\n  }\\n\\n  .base-tone-test-button:disabled {\\n    background-color: #9ca3af;\\n    cursor: not-allowed;\\n  }\\n\\n  .ready-title {\\n    color: #059669;\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    text-align: center;\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .ready-description {\\n    color: #6b7280;\\n    text-align: center;\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  /* プリセット機能のスタイル */\\n  .preset-section {\\n    background-color: #fef3c7;\\n    border: 1px solid #f59e0b;\\n    border-radius: 8px;\\n    padding: var(--space-4);\\n    margin: var(--space-4) 0;\\n    text-align: center;\\n  }\\n\\n  .preset-title {\\n    font-size: var(--text-sm);\\n    font-weight: 600;\\n    color: #92400e;\\n    margin: 0 0 var(--space-3) 0;\\n  }\\n\\n  .preset-buttons {\\n    display: flex;\\n    gap: var(--space-3);\\n    justify-content: center;\\n  }\\n\\n  .preset-button {\\n    padding: var(--space-2) var(--space-3);\\n    background-color: #f59e0b;\\n    color: white;\\n    border: none;\\n    border-radius: 6px;\\n    font-size: var(--text-sm);\\n    font-weight: 500;\\n    cursor: pointer;\\n    transition: background-color 0.2s;\\n  }\\n\\n  .preset-button:hover {\\n    background-color: #d97706;\\n  }\\n\\n  .preset-button:active {\\n    background-color: #b45309;\\n  }\\n\\n  .preset-specs {\\n    margin-top: var(--space-2);\\n    text-align: center;\\n  }\\n\\n  .preset-specs small {\\n    color: #92400e;\\n    font-size: var(--text-xs);\\n    font-family: monospace;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .mic-test-header {\\n      flex-direction: row;\\n      text-align: left;\\n    }\\n  }\\n\\n  /* カードスタイル（shadcn/ui風） */\\n  :global(.main-card) {\\n    border: 1px solid hsl(214.3 31.8% 91.4%) !important;\\n    background: hsl(0 0% 100%) !important;\\n    border-radius: 8px !important;\\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px 0 rgb(0 0 0 / 0.06) !important;\\n    margin-bottom: 1.5rem;\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => value);
  let micPermission = "initial";
  let currentVolume = 0;
  let currentFrequency = 0;
  let detectedNote = "ーー";
  let pitchDetectorComponent = null;
  $$result.css.add(css);
  let $$settled;
  let $$rendered;
  let previous_head = $$result.head;
  do {
    $$settled = true;
    $$result.head = previous_head;
    $$rendered = `${$$result.head += `<!-- HEAD_svelte-8st1fo_START -->${$$result.title = `<title>マイクテスト - 相対音感トレーニング</title>`, ""}<!-- HEAD_svelte-8st1fo_END -->`, ""} ${validate_component(PageLayout, "PageLayout").$$render($$result, { showBackButton: true }, {}, {
      default: () => {
        return `<div class="microphone-test svelte-prem1"> <div class="header svelte-prem1" data-svelte-h="svelte-4qcd63"><div class="mic-test-header svelte-prem1"><div class="mic-icon svelte-prem1"><svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" x2="12" y1="19" y2="22"></line><line x1="8" x2="16" y1="22" y2="22"></line></svg></div> <div><h1 class="mic-test-title svelte-prem1">マイクテスト</h1> <p class="mic-test-description svelte-prem1">音感トレーニングを始める前に、マイクの動作を確認します</p></div></div></div>  <div class="training-mode-info svelte-prem1">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
          default: () => {
            return `<div class="training-mode-content svelte-prem1">${` <h3 class="instructions-title svelte-prem1" data-svelte-h="svelte-gfi16f">マイクのテストを開始します</h3> <p class="instructions-description svelte-prem1" data-svelte-h="svelte-1w19y1h">マイクテスト開始ボタンを押してマイクの使用を許可してください</p> ${`${`${`<div class="mic-test-button-area svelte-prem1"><button class="mic-test-button start svelte-prem1" data-svelte-h="svelte-caex95">マイクテストを開始</button></div>`}`}`}`}</div>`;
          }
        })}</div>  ${validate_component(PitchDetectionDisplay, "PitchDetectionDisplay").$$render(
          $$result,
          {
            frequency: currentFrequency,
            note: detectedNote,
            volume: currentVolume,
            isMuted: micPermission !== "granted",
            muteMessage: "マイク許可後に開始"
          },
          {},
          {}
        )}  <div style="display: none;">${validate_component(PitchDetector_1, "PitchDetector").$$render(
          $$result,
          {
            isActive: micPermission === "granted",
            className: "pitch-detector-content",
            debugMode: false,
            this: pitchDetectorComponent
          },
          {
            this: ($$value) => {
              pitchDetectorComponent = $$value;
              $$settled = false;
            }
          },
          {}
        )}</div></div>`;
      }
    })}`;
  } while (!$$settled);
  $$unsubscribe_page();
  return $$rendered;
});
export {
  Page as default
};
