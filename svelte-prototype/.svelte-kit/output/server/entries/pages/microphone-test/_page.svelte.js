import { c as create_ssr_component, b as validate_store, d as subscribe, v as validate_component, e as escape } from "../../../chunks/ssr.js";
import { p as page } from "../../../chunks/stores.js";
import { P as PageLayout, C as Card, B as Button } from "../../../chunks/PageLayout.js";
const css = {
  code: ".microphone-test.svelte-14qwe2r.svelte-14qwe2r{max-width:800px;margin:0 auto;display:flex;flex-direction:column;gap:var(--space-6)}.header.svelte-14qwe2r.svelte-14qwe2r{text-align:center}.mic-test-header.svelte-14qwe2r.svelte-14qwe2r{display:flex;align-items:center;justify-content:center;gap:var(--space-4);margin-bottom:var(--space-4)}.mic-icon.svelte-14qwe2r.svelte-14qwe2r{width:64px;height:64px;border-radius:50%;background-color:#dbeafe;color:#2563eb;display:flex;align-items:center;justify-content:center;flex-shrink:0}.mic-test-title.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.mic-test-description.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-base);color:var(--color-gray-600);margin:0}.mic-test-content.svelte-14qwe2r.svelte-14qwe2r{text-align:center}.realtime-display.svelte-14qwe2r.svelte-14qwe2r{display:grid;gap:var(--space-6);margin-bottom:var(--space-6)}.display-title.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-3) 0}.volume-section.svelte-14qwe2r.svelte-14qwe2r{display:flex;flex-direction:column;justify-content:center;min-height:120px}.volume-bar-container.svelte-14qwe2r.svelte-14qwe2r{display:flex;align-items:center;gap:var(--space-3);margin-bottom:var(--space-2)}.volume-bar.svelte-14qwe2r.svelte-14qwe2r{flex:1;height:12px;background:var(--color-gray-200);border-radius:6px;overflow:hidden}.volume-fill.svelte-14qwe2r.svelte-14qwe2r{height:100%;background:linear-gradient(to right, #3b82f6, #93c5fd);transition:width 0.1s ease}.volume-text.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-sm);font-weight:600;color:var(--color-gray-700);min-width:40px}.frequency-display.svelte-14qwe2r.svelte-14qwe2r{margin-bottom:var(--space-2)}.frequency-value.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin-bottom:var(--space-1)}.note-value.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-700)}.volume-status.svelte-14qwe2r.svelte-14qwe2r,.frequency-status.svelte-14qwe2r.svelte-14qwe2r{text-align:center}.status-success.svelte-14qwe2r.svelte-14qwe2r{color:var(--color-success);font-weight:600}.status-pending.svelte-14qwe2r.svelte-14qwe2r{color:var(--color-gray-600)}.guidance.svelte-14qwe2r.svelte-14qwe2r{padding:var(--space-4);background:#dbeafe;border-radius:8px;border:1px solid #93c5fd}.guidance-content.svelte-14qwe2r h3.svelte-14qwe2r{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-1) 0}.guidance-content.svelte-14qwe2r p.svelte-14qwe2r{font-size:var(--text-sm);color:var(--color-gray-600);margin:0}.start-content.svelte-14qwe2r.svelte-14qwe2r{text-align:center}.start-title.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.start-description.svelte-14qwe2r.svelte-14qwe2r{font-size:var(--text-base);color:var(--color-gray-600);margin:0 0 var(--space-6) 0}@media(min-width: 768px){.mic-test-header.svelte-14qwe2r.svelte-14qwe2r{flex-direction:row;text-align:left}.realtime-display.svelte-14qwe2r.svelte-14qwe2r{grid-template-columns:1fr 1fr}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { page } from '$app/stores';\\n  import Card from '$lib/components/Card.svelte';\\n  import Button from '$lib/components/Button.svelte';\\n  import PageLayout from '$lib/components/PageLayout.svelte';\\n\\n  // URL パラメータから mode を取得\\n  let mode = 'random';\\n  \\n  onMount(() => {\\n    if ($page.url.searchParams.has('mode')) {\\n      mode = $page.url.searchParams.get('mode') || 'random';\\n    }\\n  });\\n\\n  // マイクテスト状態管理\\n  let micPermission = 'pending'; // 'pending' | 'granted' | 'denied' | 'error'\\n  let volumeDetected = false;\\n  let frequencyDetected = false;\\n  let currentVolume = 0;\\n  let currentFrequency = 0;\\n  let currentNote = '';\\n  let isListening = false;\\n\\n  // トレーニングモード設定\\n  const trainingModes = {\\n    random: {\\n      name: 'ランダム基音モード',\\n      description: '10種類の基音からランダムに選択してトレーニング',\\n      color: 'green',\\n      path: './training/random'\\n    },\\n    continuous: {\\n      name: '連続チャレンジモード',\\n      description: '選択した回数だけ連続で実行し、総合評価を確認',\\n      color: 'orange',\\n      path: './training/continuous'\\n    },\\n    chromatic: {\\n      name: '12音階モード',\\n      description: 'クロマチックスケールの上行・下行で完全制覇',\\n      color: 'purple',\\n      path: './training/chromatic'\\n    }\\n  };\\n\\n  const selectedMode = trainingModes[mode] || trainingModes.random;\\n  $: startButtonEnabled = micPermission === 'granted' && volumeDetected && frequencyDetected;\\n\\n  // 音名変換\\n  function frequencyToNote(frequency) {\\n    if (frequency <= 0) return 'C4（ド4）';\\n    \\n    const A4 = 440;\\n    const semitonesFromA4 = Math.round(12 * Math.log2(frequency / A4));\\n    const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\\n    const noteIndex = ((semitonesFromA4 + 9) % 12 + 12) % 12;\\n    const octave = Math.floor((semitonesFromA4 + 9) / 12) + 4;\\n    \\n    const note = noteNames[noteIndex];\\n    const noteNamesJa = {\\n      'C': 'ド', 'C#': 'ド#', 'D': 'レ', 'D#': 'レ#', 'E': 'ミ', 'F': 'ファ',\\n      'F#': 'ファ#', 'G': 'ソ', 'G#': 'ソ#', 'A': 'ラ', 'A#': 'ラ#', 'B': 'シ'\\n    };\\n    \\n    return \`\${note}\${octave}（\${noteNamesJa[note]}\${octave}）\`;\\n  }\\n\\n  // マイク許可テスト（モック）\\n  function requestMicrophone() {\\n    micPermission = 'pending';\\n    // モック処理：実際のマイク許可をシミュレート\\n    setTimeout(() => {\\n      micPermission = 'granted';\\n      startListening();\\n    }, 1000);\\n  }\\n\\n  // リスニング開始（モック）\\n  function startListening() {\\n    if (micPermission !== 'granted') return;\\n    \\n    isListening = true;\\n    \\n    // モック：音量・周波数データのシミュレート\\n    const interval = setInterval(() => {\\n      if (!isListening) {\\n        clearInterval(interval);\\n        return;\\n      }\\n      \\n      // ランダムな音量（0-100）\\n      currentVolume = Math.random() * 100;\\n      if (currentVolume > 20) {\\n        volumeDetected = true;\\n      }\\n      \\n      // ランダムな周波数（C3-C6の範囲）\\n      const frequencies = [130.81, 146.83, 164.81, 174.61, 196.00, 220.00, 246.94, 261.63, 293.66, 329.63];\\n      currentFrequency = frequencies[Math.floor(Math.random() * frequencies.length)];\\n      currentNote = frequencyToNote(currentFrequency);\\n      \\n      if (currentFrequency > 0) {\\n        frequencyDetected = true;\\n      }\\n    }, 200);\\n  }\\n\\n  onMount(() => {\\n    // ページ読み込み時にマイク許可をリクエスト\\n    setTimeout(() => {\\n      requestMicrophone();\\n    }, 500);\\n  });\\n<\/script>\\n\\n<svelte:head>\\n  <title>マイクテスト - 相対音感トレーニング</title>\\n</svelte:head>\\n\\n<PageLayout showBackButton={true}>\\n  <div class=\\"microphone-test\\">\\n    <!-- ヘッダー -->\\n    <div class=\\"header\\">\\n      <div class=\\"mic-test-header\\">\\n        <div class=\\"mic-icon\\">\\n          <svg width=\\"48\\" height=\\"48\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z\\"/>\\n            <path d=\\"M19 10v2a7 7 0 0 1-14 0v-2\\"/>\\n            <line x1=\\"12\\" x2=\\"12\\" y1=\\"19\\" y2=\\"22\\"/>\\n            <line x1=\\"8\\" x2=\\"16\\" y1=\\"22\\" y2=\\"22\\"/>\\n          </svg>\\n        </div>\\n        <div>\\n          <h1 class=\\"mic-test-title\\">マイクテスト</h1>\\n          <p class=\\"mic-test-description\\">音感トレーニングを始める前に、マイクの動作を確認します</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- マイクテストセクション -->\\n    <div class=\\"test-section\\">\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"mic-test-content\\">\\n\\n          <!-- リアルタイム表示 -->\\n          {#if micPermission === 'granted'}\\n            <div class=\\"realtime-display\\">\\n              <!-- 音量レベル -->\\n              <div class=\\"volume-section\\">\\n                <h3 class=\\"display-title\\">音量レベル</h3>\\n                <div class=\\"volume-bar-container\\">\\n                  <div class=\\"volume-bar\\">\\n                    <div class=\\"volume-fill\\" style=\\"width: {currentVolume}%\\"></div>\\n                  </div>\\n                  <span class=\\"volume-text\\">{Math.round(currentVolume)}%</span>\\n                </div>\\n                <div class=\\"volume-status\\">\\n                  {#if !volumeDetected}\\n                    <span class=\\"status-pending\\">⏳ 声を出して音量を確認してください</span>\\n                  {/if}\\n                </div>\\n              </div>\\n\\n              <!-- 周波数・音程表示 -->\\n              <div class=\\"frequency-section\\">\\n                <h3 class=\\"display-title\\">音程検出</h3>\\n                <div class=\\"frequency-display\\">\\n                  <div class=\\"frequency-value\\">{currentFrequency.toFixed(1)} Hz</div>\\n                  <div class=\\"note-value\\">{currentNote}</div>\\n                </div>\\n                <div class=\\"frequency-status\\">\\n                  {#if frequencyDetected}\\n                    <span class=\\"status-success\\">✅ 音程を検出しています</span>\\n                  {:else}\\n                    <span class=\\"status-pending\\">⏳ 「ド」を発声して音程を確認してください</span>\\n                  {/if}\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!-- ガイダンス -->\\n            {#if volumeDetected && !frequencyDetected}\\n              <div class=\\"guidance\\">\\n                <div class=\\"guidance-content\\">\\n                  <h3>「ド」を発声してください</h3>\\n                  <p>任意の高さで「ドー」と歌うように発声してください</p>\\n                </div>\\n              </div>\\n            {/if}\\n          {/if}\\n        </div>\\n      </Card>\\n    </div>\\n\\n    <!-- スタートボタン -->\\n    <div class=\\"start-section\\">\\n      <Card variant=\\"default\\" padding=\\"lg\\">\\n        <div class=\\"start-content\\">\\n          <h3 class=\\"start-title\\">{selectedMode.name}</h3>\\n          <p class=\\"start-description\\">\\n            {selectedMode.description}\\n          </p>\\n          \\n          {#if startButtonEnabled}\\n            <Button \\n              href={selectedMode.path} \\n              variant=\\"primary\\" \\n              size=\\"lg\\" \\n              fullWidth\\n            >\\n              トレーニング開始\\n            </Button>\\n          {:else}\\n            <Button \\n              variant=\\"disabled\\" \\n              size=\\"lg\\" \\n              fullWidth \\n              disabled\\n            >\\n              マイクテスト完了後に開始\\n            </Button>\\n          {/if}\\n        </div>\\n      </Card>\\n    </div>\\n  </div>\\n</PageLayout>\\n\\n<style>\\n  .microphone-test {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-6);\\n  }\\n\\n  .header {\\n    text-align: center;\\n  }\\n\\n  .mic-test-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: var(--space-4);\\n    margin-bottom: var(--space-4);\\n  }\\n\\n  .mic-icon {\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #dbeafe;\\n    color: #2563eb;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n  }\\n\\n  .mic-test-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .mic-test-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .mic-test-content {\\n    text-align: center;\\n  }\\n\\n  .realtime-display {\\n    display: grid;\\n    gap: var(--space-6);\\n    margin-bottom: var(--space-6);\\n  }\\n\\n  .display-title {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-3) 0;\\n  }\\n\\n  .volume-section {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    min-height: 120px;\\n  }\\n\\n  .volume-bar-container {\\n    display: flex;\\n    align-items: center;\\n    gap: var(--space-3);\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .volume-bar {\\n    flex: 1;\\n    height: 12px;\\n    background: var(--color-gray-200);\\n    border-radius: 6px;\\n    overflow: hidden;\\n  }\\n\\n  .volume-fill {\\n    height: 100%;\\n    background: linear-gradient(to right, #3b82f6, #93c5fd);\\n    transition: width 0.1s ease;\\n  }\\n\\n  .volume-text {\\n    font-size: var(--text-sm);\\n    font-weight: 600;\\n    color: var(--color-gray-700);\\n    min-width: 40px;\\n  }\\n\\n  .frequency-display {\\n    margin-bottom: var(--space-2);\\n  }\\n\\n  .frequency-value {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin-bottom: var(--space-1);\\n  }\\n\\n  .note-value {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-700);\\n  }\\n\\n  .volume-status,\\n  .frequency-status {\\n    text-align: center;\\n  }\\n\\n  .status-success {\\n    color: var(--color-success);\\n    font-weight: 600;\\n  }\\n\\n  .status-pending {\\n    color: var(--color-gray-600);\\n  }\\n\\n  .guidance {\\n    padding: var(--space-4);\\n    background: #dbeafe;\\n    border-radius: 8px;\\n    border: 1px solid #93c5fd;\\n  }\\n\\n  .guidance-content h3 {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-1) 0;\\n  }\\n\\n  .guidance-content p {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  .start-content {\\n    text-align: center;\\n  }\\n\\n  .start-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .start-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n  }\\n\\n  @media (min-width: 768px) {\\n    .mic-test-header {\\n      flex-direction: row;\\n      text-align: left;\\n    }\\n\\n    .realtime-display {\\n      grid-template-columns: 1fr 1fr;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let startButtonEnabled;
  let $$unsubscribe_page;
  validate_store(page, "page");
  $$unsubscribe_page = subscribe(page, (value) => value);
  let mode = "random";
  let micPermission = "pending";
  const trainingModes = {
    random: {
      name: "ランダム基音モード",
      description: "10種類の基音からランダムに選択してトレーニング",
      color: "green",
      path: "./training/random"
    },
    continuous: {
      name: "連続チャレンジモード",
      description: "選択した回数だけ連続で実行し、総合評価を確認",
      color: "orange",
      path: "./training/continuous"
    },
    chromatic: {
      name: "12音階モード",
      description: "クロマチックスケールの上行・下行で完全制覇",
      color: "purple",
      path: "./training/chromatic"
    }
  };
  const selectedMode = trainingModes[mode] || trainingModes.random;
  $$result.css.add(css);
  startButtonEnabled = micPermission === "granted";
  $$unsubscribe_page();
  return `${$$result.head += `<!-- HEAD_svelte-8st1fo_START -->${$$result.title = `<title>マイクテスト - 相対音感トレーニング</title>`, ""}<!-- HEAD_svelte-8st1fo_END -->`, ""} ${validate_component(PageLayout, "PageLayout").$$render($$result, { showBackButton: true }, {}, {
    default: () => {
      return `<div class="microphone-test svelte-14qwe2r"> <div class="header svelte-14qwe2r"><div class="mic-test-header svelte-14qwe2r"><div class="mic-icon svelte-14qwe2r"><svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" x2="12" y1="19" y2="22"></line><line x1="8" x2="16" y1="22" y2="22"></line></svg></div> <div><h1 class="mic-test-title svelte-14qwe2r" data-svelte-h="svelte-z7m4lk">マイクテスト</h1> <p class="mic-test-description svelte-14qwe2r" data-svelte-h="svelte-1vtv92f">音感トレーニングを始める前に、マイクの動作を確認します</p></div></div></div>  <div class="test-section">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
        default: () => {
          return `<div class="mic-test-content svelte-14qwe2r"> ${``}</div>`;
        }
      })}</div>  <div class="start-section">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
        default: () => {
          return `<div class="start-content svelte-14qwe2r"><h3 class="start-title svelte-14qwe2r">${escape(selectedMode.name)}</h3> <p class="start-description svelte-14qwe2r">${escape(selectedMode.description)}</p> ${startButtonEnabled ? `${validate_component(Button, "Button").$$render(
            $$result,
            {
              href: selectedMode.path,
              variant: "primary",
              size: "lg",
              fullWidth: true
            },
            {},
            {
              default: () => {
                return `トレーニング開始`;
              }
            }
          )}` : `${validate_component(Button, "Button").$$render(
            $$result,
            {
              variant: "disabled",
              size: "lg",
              fullWidth: true,
              disabled: true
            },
            {},
            {
              default: () => {
                return `マイクテスト完了後に開始`;
              }
            }
          )}`}</div>`;
        }
      })}</div></div>`;
    }
  })}`;
});
export {
  Page as default
};
