import { c as create_ssr_component, e as escape, b as each } from "../../../chunks/ssr.js";
const css = {
  code: ".container.svelte-19llkxn.svelte-19llkxn{max-width:1200px;margin:0 auto;padding:20px;font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif}.header.svelte-19llkxn.svelte-19llkxn{text-align:center;margin-bottom:30px;padding:20px;background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);color:white;border-radius:12px}.header.svelte-19llkxn h1.svelte-19llkxn{margin:0 0 10px 0;font-size:2.5rem}.header.svelte-19llkxn p.svelte-19llkxn{margin:0 0 15px 0;opacity:0.9}.status.svelte-19llkxn.svelte-19llkxn{display:flex;align-items:center;justify-content:center;gap:8px}.status-indicator.svelte-19llkxn.svelte-19llkxn{width:12px;height:12px;border-radius:50%;background:#ef4444;transition:background 0.3s}.status-indicator.ready.svelte-19llkxn.svelte-19llkxn{background:#10b981}.controls.svelte-19llkxn.svelte-19llkxn{text-align:center;margin-bottom:30px}.btn.svelte-19llkxn.svelte-19llkxn{padding:12px 24px;border:none;border-radius:8px;font-size:16px;font-weight:600;cursor:pointer;transition:all 0.2s;margin:0 8px}.btn.svelte-19llkxn.svelte-19llkxn:disabled{opacity:0.6;cursor:not-allowed}.btn-primary.svelte-19llkxn.svelte-19llkxn{background:#3b82f6;color:white}.btn-primary.svelte-19llkxn.svelte-19llkxn:hover:not(:disabled){background:#2563eb;transform:translateY(-1px)}.btn-secondary.svelte-19llkxn.svelte-19llkxn{background:#6b7280;color:white}.btn-secondary.svelte-19llkxn.svelte-19llkxn:hover:not(:disabled){background:#4b5563;transform:translateY(-1px)}.current-test.svelte-19llkxn.svelte-19llkxn{background:#f8fafc;border:2px solid #e2e8f0;border-radius:12px;padding:20px;margin-bottom:20px;text-align:center}.current-test.svelte-19llkxn h3.svelte-19llkxn{margin:0 0 15px 0;color:#1e293b}.progress.svelte-19llkxn.svelte-19llkxn{width:100%;height:8px;background:#e2e8f0;border-radius:4px;overflow:hidden;margin-bottom:10px}.progress-bar.svelte-19llkxn.svelte-19llkxn{height:100%;background:linear-gradient(90deg, #3b82f6, #8b5cf6);transition:width 0.5s ease}.results.svelte-19llkxn h2.svelte-19llkxn{color:#1e293b;margin-bottom:20px}.result-card.svelte-19llkxn.svelte-19llkxn{background:white;border:1px solid #e2e8f0;border-radius:12px;padding:20px;margin-bottom:20px;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}.result-header.svelte-19llkxn.svelte-19llkxn{display:flex;justify-content:space-between;align-items:center;margin-bottom:15px;padding-bottom:10px;border-bottom:1px solid #e2e8f0}.result-header.svelte-19llkxn h3.svelte-19llkxn{margin:0;color:#1e293b}.timestamp.svelte-19llkxn.svelte-19llkxn{color:#64748b;font-size:0.9rem}.error.svelte-19llkxn.svelte-19llkxn{color:#ef4444;font-weight:600;padding:10px;background:#fef2f2;border-radius:6px}.result-content.svelte-19llkxn.svelte-19llkxn{display:grid;gap:20px}.score-display.svelte-19llkxn.svelte-19llkxn{display:grid;grid-template-columns:auto 1fr;gap:20px;align-items:start}.total-score.svelte-19llkxn.svelte-19llkxn{text-align:center;padding:15px;background:#f8fafc;border-radius:8px}.score-value.svelte-19llkxn.svelte-19llkxn{display:block;font-size:2.5rem;font-weight:bold;line-height:1}.grade.svelte-19llkxn.svelte-19llkxn{display:block;font-size:1.2rem;font-weight:bold;margin-top:5px}.component-scores.svelte-19llkxn.svelte-19llkxn{display:grid;gap:8px}.component.svelte-19llkxn.svelte-19llkxn{display:flex;justify-content:space-between;align-items:center;padding:8px 12px;background:#f1f5f9;border-radius:6px}.component.svelte-19llkxn .label.svelte-19llkxn{color:#475569;font-weight:500}.component.svelte-19llkxn .value.svelte-19llkxn{font-weight:600;color:#1e293b}.feedback.svelte-19llkxn.svelte-19llkxn{background:#f0f9ff;border:1px solid #bae6fd;border-radius:8px;padding:15px}.feedback.svelte-19llkxn h4.svelte-19llkxn{margin:0 0 10px 0;color:#0c4a6e}.primary-feedback.svelte-19llkxn.svelte-19llkxn{font-weight:600;color:#0c4a6e;margin-bottom:15px}.detailed-feedback.svelte-19llkxn.svelte-19llkxn{display:grid;gap:8px}.feedback-item.svelte-19llkxn.svelte-19llkxn{font-size:0.9rem;color:#374151}.expectation.svelte-19llkxn.svelte-19llkxn{padding:10px;background:#fef3c7;border:1px solid #fbbf24;border-radius:6px;color:#92400e;font-size:0.9rem}.statistics.svelte-19llkxn.svelte-19llkxn{margin-top:40px}.statistics.svelte-19llkxn h2.svelte-19llkxn{color:#1e293b;margin-bottom:20px}.stats-grid.svelte-19llkxn.svelte-19llkxn{display:grid;grid-template-columns:repeat(auto-fit, minmax(300px, 1fr));gap:20px}.stat-card.svelte-19llkxn.svelte-19llkxn{background:white;border:1px solid #e2e8f0;border-radius:12px;padding:20px;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}.stat-card.svelte-19llkxn h3.svelte-19llkxn{margin:0 0 15px 0;color:#1e293b;font-size:1.1rem}.stat-item.svelte-19llkxn.svelte-19llkxn{display:flex;justify-content:space-between;align-items:center;padding:8px 0;border-bottom:1px solid #f1f5f9}.stat-item.svelte-19llkxn.svelte-19llkxn:last-child{border-bottom:none}.stat-item.svelte-19llkxn .label.svelte-19llkxn{color:#64748b;font-weight:500}.stat-item.svelte-19llkxn .value.svelte-19llkxn{font-weight:600;color:#1e293b}@media(max-width: 768px){.container.svelte-19llkxn.svelte-19llkxn{padding:10px}.header.svelte-19llkxn.svelte-19llkxn{padding:15px}.header.svelte-19llkxn h1.svelte-19llkxn{font-size:2rem}.score-display.svelte-19llkxn.svelte-19llkxn{grid-template-columns:1fr}.stats-grid.svelte-19llkxn.svelte-19llkxn{grid-template-columns:1fr}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount } from 'svelte';\\n  import { EnhancedScoringEngine } from '$lib/scoring/EnhancedScoringEngine.js';\\n  \\n  // 採点エンジンのインスタンス\\n  let scoringEngine = null;\\n  let isInitialized = false;\\n  \\n  // テストデータ\\n  let testScenarios = [\\n    {\\n      name: \\"完璧な長3度認識\\",\\n      baseFreq: 440,      // A4\\n      targetFreq: 554.37, // C#5 (長3度上)\\n      detectedFreq: 554.37,\\n      responseTime: 800,\\n      volume: 60,\\n      expected: \\"高得点\\"\\n    },\\n    {\\n      name: \\"やや不正確な完全5度\\",\\n      baseFreq: 261.63,   // C4\\n      targetFreq: 392.00, // G4 (完全5度上)\\n      detectedFreq: 385.00, // 少しフラット\\n      responseTime: 1500,\\n      volume: 50,\\n      expected: \\"中程度の得点\\"\\n    },\\n    {\\n      name: \\"遅い反応での短2度\\",\\n      baseFreq: 293.66,   // D4\\n      targetFreq: 311.13, // D#4 (短2度上)\\n      detectedFreq: 315.00, // 少しシャープ\\n      responseTime: 4000,\\n      volume: 45,\\n      expected: \\"速度減点あり\\"\\n    },\\n    {\\n      name: \\"方向性間違い\\",\\n      baseFreq: 349.23,   // F4\\n      targetFreq: 293.66, // D4 (下行の短3度)\\n      detectedFreq: 415.30, // A4 (上行になってしまった)\\n      responseTime: 2200,\\n      volume: 65,\\n      expected: \\"方向性エラー\\"\\n    }\\n  ];\\n  \\n  // 結果表示用\\n  let currentTest = null;\\n  let testResults = [];\\n  let isRunning = false;\\n  let currentScenarioIndex = 0;\\n  \\n  // 統計表示用\\n  let engineStats = null;\\n  \\n  onMount(() => {\\n    initializeScoringEngine();\\n  });\\n  \\n  /**\\n   * 採点エンジンの初期化\\n   */\\n  function initializeScoringEngine() {\\n    try {\\n      scoringEngine = new EnhancedScoringEngine({\\n        weights: {\\n          pitchAccuracy: 0.40,\\n          recognitionSpeed: 0.20,\\n          intervalMastery: 0.20,\\n          directionAccuracy: 0.10,\\n          consistency: 0.10\\n        },\\n        speedThresholds: {\\n          excellent: 1000,\\n          good: 2000,\\n          fair: 3000,\\n          poor: 5000\\n        }\\n      });\\n      \\n      isInitialized = true;\\n      console.log('✅ EnhancedScoringEngine初期化完了');\\n    } catch (error) {\\n      console.error('❌ EnhancedScoringEngine初期化エラー:', error);\\n    }\\n  }\\n  \\n  /**\\n   * 単一テストシナリオの実行\\n   */\\n  async function runSingleTest(scenario) {\\n    if (!isInitialized) {\\n      console.error('採点エンジンが初期化されていません');\\n      return null;\\n    }\\n    \\n    try {\\n      console.log(\`🧪 テスト実行: \${scenario.name}\`);\\n      \\n      const result = await scoringEngine.analyzePerformance({\\n        baseFreq: scenario.baseFreq,\\n        targetFreq: scenario.targetFreq,\\n        detectedFreq: scenario.detectedFreq,\\n        responseTime: scenario.responseTime,\\n        volume: scenario.volume,\\n        harmonicCorrection: null // テスト用にnull\\n      });\\n      \\n      return {\\n        scenario: scenario.name,\\n        expected: scenario.expected,\\n        result: result,\\n        timestamp: new Date().toLocaleTimeString()\\n      };\\n      \\n    } catch (error) {\\n      console.error('❌ テスト実行エラー:', error);\\n      return {\\n        scenario: scenario.name,\\n        expected: scenario.expected,\\n        error: error.message,\\n        timestamp: new Date().toLocaleTimeString()\\n      };\\n    }\\n  }\\n  \\n  /**\\n   * 全テストシナリオの実行\\n   */\\n  async function runAllTests() {\\n    if (!isInitialized) {\\n      alert('採点エンジンが初期化されていません');\\n      return;\\n    }\\n    \\n    isRunning = true;\\n    testResults = [];\\n    currentTest = null;\\n    currentScenarioIndex = 0;\\n    \\n    for (let i = 0; i < testScenarios.length; i++) {\\n      currentScenarioIndex = i;\\n      currentTest = testScenarios[i];\\n      \\n      // 短い遅延を入れて視覚的な効果を作る\\n      await new Promise(resolve => setTimeout(resolve, 500));\\n      \\n      const result = await runSingleTest(testScenarios[i]);\\n      if (result) {\\n        testResults = [...testResults, result];\\n      }\\n    }\\n    \\n    isRunning = false;\\n    currentTest = null;\\n    \\n    // 統計情報の取得\\n    engineStats = scoringEngine.getStatistics();\\n    \\n    console.log('✅ 全テスト完了');\\n  }\\n  \\n  /**\\n   * エンジンのリセット\\n   */\\n  function resetEngine() {\\n    if (scoringEngine) {\\n      scoringEngine.reset();\\n      testResults = [];\\n      engineStats = null;\\n      console.log('🔄 エンジンリセット完了');\\n    }\\n  }\\n  \\n  /**\\n   * スコアの色分け\\n   */\\n  function getScoreColor(score) {\\n    if (score >= 90) return '#10b981'; // 緑\\n    if (score >= 80) return '#3b82f6'; // 青\\n    if (score >= 70) return '#f59e0b'; // 黄\\n    if (score >= 60) return '#f97316'; // オレンジ\\n    return '#ef4444'; // 赤\\n  }\\n  \\n  /**\\n   * 成績の色分け\\n   */\\n  function getGradeColor(grade) {\\n    if (['S', 'A+', 'A'].includes(grade)) return '#10b981';\\n    if (['B+', 'B'].includes(grade)) return '#3b82f6';\\n    if (['C+', 'C'].includes(grade)) return '#f59e0b';\\n    if (['D+', 'D'].includes(grade)) return '#f97316';\\n    return '#ef4444';\\n  }\\n<\/script>\\n\\n<svelte:head>\\n  <title>Enhanced Scoring Engine - Test Page</title>\\n</svelte:head>\\n\\n<!-- メインコンテナ -->\\n<div class=\\"container\\">\\n  <header class=\\"header\\">\\n    <h1>🎯 Enhanced Scoring Engine</h1>\\n    <p>統合採点エンジンのテストページ</p>\\n    <div class=\\"status\\">\\n      <span class=\\"status-indicator\\" class:ready={isInitialized} class:error={!isInitialized}></span>\\n      <span>{isInitialized ? '準備完了' : '初期化中...'}</span>\\n    </div>\\n  </header>\\n\\n  <!-- コントロールパネル -->\\n  <section class=\\"controls\\">\\n    <button \\n      class=\\"btn btn-primary\\" \\n      on:click={runAllTests} \\n      disabled={!isInitialized || isRunning}\\n    >\\n      {#if isRunning}\\n        🔄 テスト実行中...\\n      {:else}\\n        🧪 全テスト実行\\n      {/if}\\n    </button>\\n    \\n    <button \\n      class=\\"btn btn-secondary\\" \\n      on:click={resetEngine} \\n      disabled={!isInitialized || isRunning}\\n    >\\n      🔄 リセット\\n    </button>\\n  </section>\\n\\n  <!-- 実行中表示 -->\\n  {#if isRunning && currentTest}\\n    <section class=\\"current-test\\">\\n      <h3>📊 実行中: {currentTest.name}</h3>\\n      <div class=\\"progress\\">\\n        <div class=\\"progress-bar\\" style=\\"width: {((currentScenarioIndex + 1) / testScenarios.length) * 100}%\\"></div>\\n      </div>\\n      <p>{currentScenarioIndex + 1} / {testScenarios.length}</p>\\n    </section>\\n  {/if}\\n\\n  <!-- テスト結果表示 -->\\n  {#if testResults.length > 0}\\n    <section class=\\"results\\">\\n      <h2>📋 テスト結果</h2>\\n      \\n      {#each testResults as testResult, index}\\n        <div class=\\"result-card\\">\\n          <div class=\\"result-header\\">\\n            <h3>{testResult.scenario}</h3>\\n            <span class=\\"timestamp\\">{testResult.timestamp}</span>\\n          </div>\\n          \\n          {#if testResult.error}\\n            <div class=\\"error\\">\\n              ❌ エラー: {testResult.error}\\n            </div>\\n          {:else}\\n            <div class=\\"result-content\\">\\n              <!-- スコア表示 -->\\n              <div class=\\"score-display\\">\\n                <div class=\\"total-score\\">\\n                  <span \\n                    class=\\"score-value\\" \\n                    style=\\"color: {getScoreColor(testResult.result.score.total)}\\"\\n                  >\\n                    {testResult.result.score.total}\\n                  </span>\\n                  <span \\n                    class=\\"grade\\" \\n                    style=\\"color: {getGradeColor(testResult.result.score.grade)}\\"\\n                  >\\n                    {testResult.result.score.grade}\\n                  </span>\\n                </div>\\n                \\n                <!-- 成分スコア -->\\n                <div class=\\"component-scores\\">\\n                  <div class=\\"component\\">\\n                    <span class=\\"label\\">音程精度:</span>\\n                    <span class=\\"value\\">{testResult.result.score.components.pitchAccuracy}%</span>\\n                  </div>\\n                  <div class=\\"component\\">\\n                    <span class=\\"label\\">認識速度:</span>\\n                    <span class=\\"value\\">{testResult.result.score.components.recognitionSpeed}%</span>\\n                  </div>\\n                  <div class=\\"component\\">\\n                    <span class=\\"label\\">音程習得度:</span>\\n                    <span class=\\"value\\">{testResult.result.score.components.intervalMastery}%</span>\\n                  </div>\\n                  <div class=\\"component\\">\\n                    <span class=\\"label\\">方向性精度:</span>\\n                    <span class=\\"value\\">{testResult.result.score.components.directionAccuracy}%</span>\\n                  </div>\\n                  <div class=\\"component\\">\\n                    <span class=\\"label\\">一貫性:</span>\\n                    <span class=\\"value\\">{testResult.result.score.components.consistency}%</span>\\n                  </div>\\n                </div>\\n              </div>\\n              \\n              <!-- フィードバック -->\\n              <div class=\\"feedback\\">\\n                <h4>💬 フィードバック</h4>\\n                <p class=\\"primary-feedback\\">{testResult.result.feedback.primary}</p>\\n                \\n                {#if testResult.result.feedback.detailed}\\n                  <div class=\\"detailed-feedback\\">\\n                    <div class=\\"feedback-item\\">\\n                      <strong>音程:</strong> {testResult.result.feedback.detailed.interval}\\n                    </div>\\n                    <div class=\\"feedback-item\\">\\n                      <strong>方向性:</strong> {testResult.result.feedback.detailed.direction}\\n                    </div>\\n                    <div class=\\"feedback-item\\">\\n                      <strong>一貫性:</strong> {testResult.result.feedback.detailed.consistency}\\n                    </div>\\n                    <div class=\\"feedback-item\\">\\n                      <strong>速度:</strong> {testResult.result.feedback.detailed.speed}\\n                    </div>\\n                  </div>\\n                {/if}\\n              </div>\\n              \\n              <!-- 期待値との比較 -->\\n              <div class=\\"expectation\\">\\n                <strong>期待値:</strong> {testResult.expected}\\n              </div>\\n            </div>\\n          {/if}\\n        </div>\\n      {/each}\\n    </section>\\n  {/if}\\n\\n  <!-- 統計情報 -->\\n  {#if engineStats}\\n    <section class=\\"statistics\\">\\n      <h2>📊 エンジン統計</h2>\\n      \\n      <div class=\\"stats-grid\\">\\n        <div class=\\"stat-card\\">\\n          <h3>セッション情報</h3>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">総試行回数:</span>\\n            <span class=\\"value\\">{engineStats.session.totalAttempts}</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">平均スコア:</span>\\n            <span class=\\"value\\">{engineStats.session.overallScore.toFixed(1)}</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">現在レベル:</span>\\n            <span class=\\"value\\">{engineStats.session.currentLevel}</span>\\n          </div>\\n        </div>\\n        \\n        <div class=\\"stat-card\\">\\n          <h3>パフォーマンス</h3>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">平均速度:</span>\\n            <span class=\\"value\\">{engineStats.performance.averageSpeed.toFixed(1)}</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">精度トレンド:</span>\\n            <span class=\\"value\\">{engineStats.performance.accuracyTrend}</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">セッション進捗:</span>\\n            <span class=\\"value\\">{engineStats.performance.sessionProgress}%</span>\\n          </div>\\n        </div>\\n        \\n        <div class=\\"stat-card\\">\\n          <h3>分析器統計</h3>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">音程分析:</span>\\n            <span class=\\"value\\">{engineStats.analyzers.interval.totalAnalyses}回</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">方向性分析:</span>\\n            <span class=\\"value\\">{engineStats.analyzers.direction.totalAnalyses}回</span>\\n          </div>\\n          <div class=\\"stat-item\\">\\n            <span class=\\"label\\">一貫性追跡:</span>\\n            <span class=\\"value\\">{engineStats.analyzers.consistency.totalAttempts}回</span>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n  {/if}\\n</div>\\n\\n<style>\\n  .container {\\n    max-width: 1200px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\\n  }\\n  \\n  .header {\\n    text-align: center;\\n    margin-bottom: 30px;\\n    padding: 20px;\\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n    color: white;\\n    border-radius: 12px;\\n  }\\n  \\n  .header h1 {\\n    margin: 0 0 10px 0;\\n    font-size: 2.5rem;\\n  }\\n  \\n  .header p {\\n    margin: 0 0 15px 0;\\n    opacity: 0.9;\\n  }\\n  \\n  .status {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n  }\\n  \\n  .status-indicator {\\n    width: 12px;\\n    height: 12px;\\n    border-radius: 50%;\\n    background: #ef4444;\\n    transition: background 0.3s;\\n  }\\n  \\n  .status-indicator.ready {\\n    background: #10b981;\\n  }\\n  \\n  .controls {\\n    text-align: center;\\n    margin-bottom: 30px;\\n  }\\n  \\n  .btn {\\n    padding: 12px 24px;\\n    border: none;\\n    border-radius: 8px;\\n    font-size: 16px;\\n    font-weight: 600;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n    margin: 0 8px;\\n  }\\n  \\n  .btn:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n  }\\n  \\n  .btn-primary {\\n    background: #3b82f6;\\n    color: white;\\n  }\\n  \\n  .btn-primary:hover:not(:disabled) {\\n    background: #2563eb;\\n    transform: translateY(-1px);\\n  }\\n  \\n  .btn-secondary {\\n    background: #6b7280;\\n    color: white;\\n  }\\n  \\n  .btn-secondary:hover:not(:disabled) {\\n    background: #4b5563;\\n    transform: translateY(-1px);\\n  }\\n  \\n  .current-test {\\n    background: #f8fafc;\\n    border: 2px solid #e2e8f0;\\n    border-radius: 12px;\\n    padding: 20px;\\n    margin-bottom: 20px;\\n    text-align: center;\\n  }\\n  \\n  .current-test h3 {\\n    margin: 0 0 15px 0;\\n    color: #1e293b;\\n  }\\n  \\n  .progress {\\n    width: 100%;\\n    height: 8px;\\n    background: #e2e8f0;\\n    border-radius: 4px;\\n    overflow: hidden;\\n    margin-bottom: 10px;\\n  }\\n  \\n  .progress-bar {\\n    height: 100%;\\n    background: linear-gradient(90deg, #3b82f6, #8b5cf6);\\n    transition: width 0.5s ease;\\n  }\\n  \\n  .results h2 {\\n    color: #1e293b;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .result-card {\\n    background: white;\\n    border: 1px solid #e2e8f0;\\n    border-radius: 12px;\\n    padding: 20px;\\n    margin-bottom: 20px;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .result-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 15px;\\n    padding-bottom: 10px;\\n    border-bottom: 1px solid #e2e8f0;\\n  }\\n  \\n  .result-header h3 {\\n    margin: 0;\\n    color: #1e293b;\\n  }\\n  \\n  .timestamp {\\n    color: #64748b;\\n    font-size: 0.9rem;\\n  }\\n  \\n  .error {\\n    color: #ef4444;\\n    font-weight: 600;\\n    padding: 10px;\\n    background: #fef2f2;\\n    border-radius: 6px;\\n  }\\n  \\n  .result-content {\\n    display: grid;\\n    gap: 20px;\\n  }\\n  \\n  .score-display {\\n    display: grid;\\n    grid-template-columns: auto 1fr;\\n    gap: 20px;\\n    align-items: start;\\n  }\\n  \\n  .total-score {\\n    text-align: center;\\n    padding: 15px;\\n    background: #f8fafc;\\n    border-radius: 8px;\\n  }\\n  \\n  .score-value {\\n    display: block;\\n    font-size: 2.5rem;\\n    font-weight: bold;\\n    line-height: 1;\\n  }\\n  \\n  .grade {\\n    display: block;\\n    font-size: 1.2rem;\\n    font-weight: bold;\\n    margin-top: 5px;\\n  }\\n  \\n  .component-scores {\\n    display: grid;\\n    gap: 8px;\\n  }\\n  \\n  .component {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 8px 12px;\\n    background: #f1f5f9;\\n    border-radius: 6px;\\n  }\\n  \\n  .component .label {\\n    color: #475569;\\n    font-weight: 500;\\n  }\\n  \\n  .component .value {\\n    font-weight: 600;\\n    color: #1e293b;\\n  }\\n  \\n  .feedback {\\n    background: #f0f9ff;\\n    border: 1px solid #bae6fd;\\n    border-radius: 8px;\\n    padding: 15px;\\n  }\\n  \\n  .feedback h4 {\\n    margin: 0 0 10px 0;\\n    color: #0c4a6e;\\n  }\\n  \\n  .primary-feedback {\\n    font-weight: 600;\\n    color: #0c4a6e;\\n    margin-bottom: 15px;\\n  }\\n  \\n  .detailed-feedback {\\n    display: grid;\\n    gap: 8px;\\n  }\\n  \\n  .feedback-item {\\n    font-size: 0.9rem;\\n    color: #374151;\\n  }\\n  \\n  .expectation {\\n    padding: 10px;\\n    background: #fef3c7;\\n    border: 1px solid #fbbf24;\\n    border-radius: 6px;\\n    color: #92400e;\\n    font-size: 0.9rem;\\n  }\\n  \\n  .statistics {\\n    margin-top: 40px;\\n  }\\n  \\n  .statistics h2 {\\n    color: #1e293b;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .stats-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n    gap: 20px;\\n  }\\n  \\n  .stat-card {\\n    background: white;\\n    border: 1px solid #e2e8f0;\\n    border-radius: 12px;\\n    padding: 20px;\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .stat-card h3 {\\n    margin: 0 0 15px 0;\\n    color: #1e293b;\\n    font-size: 1.1rem;\\n  }\\n  \\n  .stat-item {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 8px 0;\\n    border-bottom: 1px solid #f1f5f9;\\n  }\\n  \\n  .stat-item:last-child {\\n    border-bottom: none;\\n  }\\n  \\n  .stat-item .label {\\n    color: #64748b;\\n    font-weight: 500;\\n  }\\n  \\n  .stat-item .value {\\n    font-weight: 600;\\n    color: #1e293b;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    .container {\\n      padding: 10px;\\n    }\\n    \\n    .header {\\n      padding: 15px;\\n    }\\n    \\n    .header h1 {\\n      font-size: 2rem;\\n    }\\n    \\n    .score-display {\\n      grid-template-columns: 1fr;\\n    }\\n    \\n    .stats-grid {\\n      grid-template-columns: 1fr;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
function getScoreColor(score) {
  if (score >= 90) return "#10b981";
  if (score >= 80) return "#3b82f6";
  if (score >= 70) return "#f59e0b";
  if (score >= 60) return "#f97316";
  return "#ef4444";
}
function getGradeColor(grade) {
  if (["S", "A+", "A"].includes(grade)) return "#10b981";
  if (["B+", "B"].includes(grade)) return "#3b82f6";
  if (["C+", "C"].includes(grade)) return "#f59e0b";
  if (["D+", "D"].includes(grade)) return "#f97316";
  return "#ef4444";
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let testResults = [];
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-pwq006_START -->${$$result.title = `<title>Enhanced Scoring Engine - Test Page</title>`, ""}<!-- HEAD_svelte-pwq006_END -->`, ""}  <div class="container svelte-19llkxn"><header class="header svelte-19llkxn"><h1 class="svelte-19llkxn" data-svelte-h="svelte-f90z2e">🎯 Enhanced Scoring Engine</h1> <p class="svelte-19llkxn" data-svelte-h="svelte-10mru30">統合採点エンジンのテストページ</p> <div class="status svelte-19llkxn"><span class="${[
    "status-indicator svelte-19llkxn",
    " error"
  ].join(" ").trim()}"></span> <span>${escape("初期化中...")}</span></div></header>  <section class="controls svelte-19llkxn"><button class="btn btn-primary svelte-19llkxn" ${"disabled"}>${`🧪 全テスト実行`}</button> <button class="btn btn-secondary svelte-19llkxn" ${"disabled"}>🔄 リセット</button></section>  ${``}  ${testResults.length > 0 ? `<section class="results svelte-19llkxn"><h2 class="svelte-19llkxn" data-svelte-h="svelte-s3709x">📋 テスト結果</h2> ${each(testResults, (testResult, index) => {
    return `<div class="result-card svelte-19llkxn"><div class="result-header svelte-19llkxn"><h3 class="svelte-19llkxn">${escape(testResult.scenario)}</h3> <span class="timestamp svelte-19llkxn">${escape(testResult.timestamp)}</span></div> ${testResult.error ? `<div class="error svelte-19llkxn">❌ エラー: ${escape(testResult.error)} </div>` : `<div class="result-content svelte-19llkxn"> <div class="score-display svelte-19llkxn"><div class="total-score svelte-19llkxn"><span class="score-value svelte-19llkxn" style="${"color: " + escape(getScoreColor(testResult.result.score.total), true)}">${escape(testResult.result.score.total)}</span> <span class="grade svelte-19llkxn" style="${"color: " + escape(getGradeColor(testResult.result.score.grade), true)}">${escape(testResult.result.score.grade)} </span></div>  <div class="component-scores svelte-19llkxn"><div class="component svelte-19llkxn"><span class="label svelte-19llkxn" data-svelte-h="svelte-146tyqf">音程精度:</span> <span class="value svelte-19llkxn">${escape(testResult.result.score.components.pitchAccuracy)}%</span></div> <div class="component svelte-19llkxn"><span class="label svelte-19llkxn" data-svelte-h="svelte-sqw889">認識速度:</span> <span class="value svelte-19llkxn">${escape(testResult.result.score.components.recognitionSpeed)}%</span></div> <div class="component svelte-19llkxn"><span class="label svelte-19llkxn" data-svelte-h="svelte-1uo5o5u">音程習得度:</span> <span class="value svelte-19llkxn">${escape(testResult.result.score.components.intervalMastery)}%</span></div> <div class="component svelte-19llkxn"><span class="label svelte-19llkxn" data-svelte-h="svelte-vuo93o">方向性精度:</span> <span class="value svelte-19llkxn">${escape(testResult.result.score.components.directionAccuracy)}%</span></div> <div class="component svelte-19llkxn"><span class="label svelte-19llkxn" data-svelte-h="svelte-z9t95r">一貫性:</span> <span class="value svelte-19llkxn">${escape(testResult.result.score.components.consistency)}%</span></div> </div></div>  <div class="feedback svelte-19llkxn"><h4 class="svelte-19llkxn" data-svelte-h="svelte-1svoycg">💬 フィードバック</h4> <p class="primary-feedback svelte-19llkxn">${escape(testResult.result.feedback.primary)}</p> ${testResult.result.feedback.detailed ? `<div class="detailed-feedback svelte-19llkxn"><div class="feedback-item svelte-19llkxn"><strong data-svelte-h="svelte-677z0q">音程:</strong> ${escape(testResult.result.feedback.detailed.interval)}</div> <div class="feedback-item svelte-19llkxn"><strong data-svelte-h="svelte-8yvkz3">方向性:</strong> ${escape(testResult.result.feedback.detailed.direction)}</div> <div class="feedback-item svelte-19llkxn"><strong data-svelte-h="svelte-x7tjto">一貫性:</strong> ${escape(testResult.result.feedback.detailed.consistency)}</div> <div class="feedback-item svelte-19llkxn"><strong data-svelte-h="svelte-xkjonl">速度:</strong> ${escape(testResult.result.feedback.detailed.speed)}</div> </div>` : ``}</div>  <div class="expectation svelte-19llkxn"><strong data-svelte-h="svelte-1ri8yc2">期待値:</strong> ${escape(testResult.expected)}</div> </div>`} </div>`;
  })}</section>` : ``}  ${``} </div>`;
});
export {
  Page as default
};
