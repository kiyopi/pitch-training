import { c as create_ssr_component, o as onDestroy, v as validate_component, e as escape } from "../../../../chunks/ssr.js";
import { P as PageLayout, C as Card } from "../../../../chunks/PageLayout.js";
import { B as Button } from "../../../../chunks/Button.js";
const css = {
  code: ".random-training.svelte-1samlw1.svelte-1samlw1{max-width:800px;margin:0 auto;display:flex;flex-direction:column;gap:var(--space-6)}.header.svelte-1samlw1.svelte-1samlw1{text-align:center}.mode-header.svelte-1samlw1.svelte-1samlw1{display:flex;align-items:center;justify-content:center;gap:var(--space-4)}.mode-icon.svelte-1samlw1.svelte-1samlw1{width:64px;height:64px;border-radius:50%;background-color:#d1fae5;color:#059669;display:flex;align-items:center;justify-content:center;flex-shrink:0}.mode-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-1) 0}.mode-description.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);color:var(--color-gray-600);margin:0}.start-content.svelte-1samlw1.svelte-1samlw1{text-align:center}.start-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.start-description.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);color:var(--color-gray-600);margin:0 0 var(--space-6) 0;line-height:1.6}.instructions.svelte-1samlw1.svelte-1samlw1{display:flex;flex-direction:column;gap:var(--space-4);margin-bottom:var(--space-8);text-align:left}.instruction-item.svelte-1samlw1.svelte-1samlw1{display:flex;align-items:flex-start;gap:var(--space-3)}.step-number.svelte-1samlw1.svelte-1samlw1{width:32px;height:32px;border-radius:50%;background-color:var(--color-primary);color:white;display:flex;align-items:center;justify-content:center;font-weight:600;flex-shrink:0}.instruction-item.svelte-1samlw1 h3.svelte-1samlw1{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-1) 0}.instruction-item.svelte-1samlw1 p.svelte-1samlw1{font-size:var(--text-sm);color:var(--color-gray-600);margin:0}.playing-content.svelte-1samlw1.svelte-1samlw1{text-align:center}.playing-icon.svelte-1samlw1.svelte-1samlw1{width:80px;height:80px;border-radius:50%;background-color:var(--color-primary-pale);color:var(--color-primary);display:flex;align-items:center;justify-content:center;margin:0 auto var(--space-4) auto}.playing-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.playing-note.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-lg);font-weight:600;color:var(--color-primary);margin:0 0 var(--space-2) 0}.playing-frequency.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);font-weight:500;color:var(--color-gray-700);margin:0 0 var(--space-2) 0}.playing-instruction.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);color:var(--color-gray-600);margin:0 0 var(--space-6) 0}.playing-progress.svelte-1samlw1.svelte-1samlw1{margin:0 auto;max-width:200px}.progress-bar.svelte-1samlw1.svelte-1samlw1{height:8px;background-color:var(--color-gray-200);border-radius:4px;overflow:hidden}.progress-fill.svelte-1samlw1.svelte-1samlw1{height:100%;background-color:var(--color-primary);animation:svelte-1samlw1-progress 2.5s ease-in-out}@keyframes svelte-1samlw1-progress{from{width:0%}to{width:100%}}.guide-content.svelte-1samlw1.svelte-1samlw1{text-align:center}.guide-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-6) 0}.scale-guide.svelte-1samlw1.svelte-1samlw1{display:grid;grid-template-columns:repeat(8, 1fr);gap:var(--space-2)}.scale-note.svelte-1samlw1.svelte-1samlw1{display:flex;flex-direction:column;align-items:center;padding:var(--space-3);border-radius:8px;background-color:var(--color-gray-100);transition:all 0.3s ease}.scale-note.active.svelte-1samlw1.svelte-1samlw1{background-color:var(--color-primary);color:white;transform:scale(1.1)}.scale-note.completed.svelte-1samlw1.svelte-1samlw1{background-color:var(--color-gray-200)}.note-text.svelte-1samlw1.svelte-1samlw1{font-weight:600;font-size:var(--text-lg)}.note-frequency.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xs);color:var(--color-gray-500);font-weight:500;margin-top:var(--space-1)}.result-icon.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-sm);font-weight:600}.result-icon.correct.svelte-1samlw1.svelte-1samlw1{color:var(--color-success)}.result-icon.incorrect.svelte-1samlw1.svelte-1samlw1{color:var(--color-error)}.realtime-display.svelte-1samlw1.svelte-1samlw1{margin-top:var(--space-6)}.display-grid.svelte-1samlw1.svelte-1samlw1{display:grid;gap:var(--space-4);grid-template-columns:1fr 1fr}.display-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-3) 0;text-align:center}.progress-info.svelte-1samlw1.svelte-1samlw1{text-align:center}.progress-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.progress-details.svelte-1samlw1.svelte-1samlw1{display:flex;justify-content:space-between;font-size:var(--text-sm);color:var(--color-gray-600)}.results-content.svelte-1samlw1.svelte-1samlw1{text-align:center}.results-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xl);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-6) 0}.score-display.svelte-1samlw1.svelte-1samlw1{margin-bottom:var(--space-6);display:flex;align-items:center;gap:var(--space-6);flex-wrap:wrap;justify-content:center}.score-circle.svelte-1samlw1.svelte-1samlw1{width:120px;height:120px;border-radius:50%;background-color:var(--color-primary-pale);display:flex;align-items:center;justify-content:center;border:4px solid var(--color-primary);flex-shrink:0}.score-circle.excellent.svelte-1samlw1.svelte-1samlw1{background-color:#dcfce7;border-color:#16a34a}.score-circle.good.svelte-1samlw1.svelte-1samlw1{background-color:#dbeafe;border-color:#2563eb}.score-circle.practice.svelte-1samlw1.svelte-1samlw1{background-color:#fef3c7;border-color:#d97706}.score-circle.needs.svelte-1samlw1.svelte-1samlw1{background-color:#fee2e2;border-color:#dc2626}.grade-info.svelte-1samlw1.svelte-1samlw1{text-align:left;flex:1;min-width:200px}.grade-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-2xl);font-weight:700;color:var(--color-gray-900);margin:0 0 var(--space-2) 0}.score-value.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-4xl);font-weight:700;color:var(--color-primary)}.score-unit.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-lg);font-weight:600;color:var(--color-primary);margin-left:var(--space-1)}.score-description.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-base);color:var(--color-gray-600);margin:0 0 var(--space-3) 0}.feedback-message.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-sm);color:var(--color-gray-700);line-height:1.5;margin:0;font-style:italic}.details-title.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-lg);font-weight:600;color:var(--color-gray-900);margin:0 0 var(--space-4) 0}.scale-results.svelte-1samlw1.svelte-1samlw1{display:grid;grid-template-columns:repeat(8, 1fr);gap:var(--space-2);margin-bottom:var(--space-8)}.scale-result.svelte-1samlw1.svelte-1samlw1{display:flex;flex-direction:column;align-items:center;padding:var(--space-2);border-radius:8px;background-color:var(--color-gray-50)}.scale-note-name.svelte-1samlw1.svelte-1samlw1{font-weight:600;color:var(--color-gray-900);margin-bottom:var(--space-1)}.scale-result-icon.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-lg);font-weight:600}.scale-result-icon.correct.svelte-1samlw1.svelte-1samlw1{color:var(--color-success)}.scale-result-icon.incorrect.svelte-1samlw1.svelte-1samlw1{color:var(--color-error)}.action-buttons.svelte-1samlw1.svelte-1samlw1{display:flex;flex-direction:column;gap:var(--space-3)}.loading-info.svelte-1samlw1.svelte-1samlw1{text-align:center;margin:var(--space-3) 0 0 0}.loading-message.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-sm);color:var(--color-gray-600);margin:var(--space-2) 0;animation:svelte-1samlw1-pulse 2s infinite}.error-message.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-sm);color:var(--color-error);margin:var(--space-2) 0;font-weight:600}.fallback-options.svelte-1samlw1.svelte-1samlw1{margin:var(--space-3) 0;display:flex;flex-direction:column;gap:var(--space-2);align-items:center}.retry-message.svelte-1samlw1.svelte-1samlw1{font-size:var(--text-xs);color:var(--color-gray-500);margin:0}@keyframes svelte-1samlw1-pulse{0%,100%{opacity:1}50%{opacity:0.5}}@media(max-width: 767px){.scale-guide.svelte-1samlw1.svelte-1samlw1,.scale-results.svelte-1samlw1.svelte-1samlw1{grid-template-columns:repeat(4, 1fr)}.display-grid.svelte-1samlw1.svelte-1samlw1{grid-template-columns:1fr}.mode-header.svelte-1samlw1.svelte-1samlw1{flex-direction:column;text-align:center}.score-display.svelte-1samlw1.svelte-1samlw1{flex-direction:column;text-align:center}.grade-info.svelte-1samlw1.svelte-1samlw1{text-align:center}.note-frequency.svelte-1samlw1.svelte-1samlw1{display:none}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  import { onMount, onDestroy } from 'svelte';\\n  import Card from '$lib/components/Card.svelte';\\n  import Button from '$lib/components/Button.svelte';\\n  import PageLayout from '$lib/components/PageLayout.svelte';\\n  import VolumeBar from '$lib/components/VolumeBar.svelte';\\n  import PitchDisplay from '$lib/components/PitchDisplay.svelte';\\n  \\n  // Tone.js変数\\n  let Tone = null;\\n  let sampler = null;\\n  let isToneLoaded = false;\\n  let toneLoadingError = null;\\n  let loadingStatus = 'Tone.js読み込み中...';\\n  let useSimpleAudio = false; // フォールバック用\\n\\n  // トレーニング状態管理\\n  let isPlaying = false;\\n  let isDetecting = false;\\n  let currentBaseNote = '';\\n  let currentScaleIndex = 0;\\n  let scaleResults = [];\\n  let showResults = false;\\n  let currentVolume = 0;\\n  let currentFrequency = 0;\\n  let currentNote = '';\\n  \\n  // 音階システム\\n  const scaleNotes = ['ド', 'レ', 'ミ', 'ファ', 'ソ', 'ラ', 'シ', 'ド'];\\n  const baseNotes = ['Bb3', 'B3', 'C4', 'Db4', 'D4', 'Eb4', 'E4', 'F4', 'Gb4', 'Ab4']; // 10種類の基音\\n  \\n  // 基音周波数マップ（A4=440Hzを基準）\\n  const baseNoteFrequencies = {\\n    'Bb3': 233.08,\\n    'B3': 246.94,\\n    'C4': 261.63,\\n    'Db4': 277.18,\\n    'D4': 293.66,\\n    'Eb4': 311.13,\\n    'E4': 329.63,\\n    'F4': 349.23,\\n    'Gb4': 369.99,\\n    'Ab4': 415.30\\n  };\\n  \\n  // スケール周波数計算（基音からの相対周波数）\\n  const scaleRatios = [1.0, 9/8, 5/4, 4/3, 3/2, 5/3, 15/8, 2.0]; // 純正律\\n  \\n  // Tone.js初期化（改良版）\\n  async function initializeTone() {\\n    try {\\n      loadingStatus = 'Tone.js CDN読み込み中...';\\n      console.log('🔄 Tone.js初期化開始（ピアノ音源必須モード）');\\n      \\n      // Tone.js CDNから読み込み（Promise化）\\n      if (typeof window !== 'undefined' && !window.Tone) {\\n        console.log('📥 Tone.js CDN読み込み開始...');\\n        \\n        await new Promise((resolve, reject) => {\\n          const script = document.createElement('script');\\n          script.src = 'https://unpkg.com/tone@14.7.77/build/Tone.js';\\n          script.async = true;\\n          \\n          script.onload = () => {\\n            console.log('✅ Tone.js CDNスクリプト読み込み完了');\\n            if (window.Tone) {\\n              console.log('✅ window.Tone利用可能');\\n              resolve();\\n            } else {\\n              console.error('❌ window.Toneが未定義');\\n              reject(new Error('window.Toneが利用できません'));\\n            }\\n          };\\n          \\n          script.onerror = (error) => {\\n            console.error('❌ Tone.js CDN読み込みエラー:', error);\\n            reject(new Error('Tone.js CDNの読み込みに失敗しました'));\\n          };\\n          \\n          // 5秒タイムアウト\\n          setTimeout(() => {\\n            if (!window.Tone) {\\n              console.warn('⚠️ Tone.js CDN読み込みタイムアウト');\\n              reject(new Error('Tone.js読み込みタイムアウト'));\\n            }\\n          }, 5000);\\n          \\n          document.head.appendChild(script);\\n        });\\n        \\n        loadingStatus = 'Tone.js初期化中...';\\n        Tone = window.Tone;\\n        console.log('🎵 Tone.js変数設定完了');\\n        await setupSampler();\\n        \\n      } else if (window.Tone) {\\n        console.log('✅ Tone.js既に読み込み済み');\\n        Tone = window.Tone;\\n        await setupSampler();\\n      } else {\\n        console.warn('⚠️ window未定義 - SSR環境の可能性');\\n        // SSR環境ではスキップ、クライアント側でretry\\n        setTimeout(() => initializeTone(), 1000);\\n      }\\n    } catch (error) {\\n      console.error('❌ Tone.js初期化エラー:', error);\\n      toneLoadingError = \`初期化エラー: \${error.message}\`;\\n      loadingStatus = 'エラー';\\n      \\n      // 3秒後にフォールバックモードに切り替え\\n      setTimeout(() => {\\n        console.log('🔧 自動フォールバックモード切り替え');\\n        forceSimpleAudio();\\n      }, 3000);\\n    }\\n  }\\n  \\n  // Salamander Grand Piano サンプラー設定（ローカル音源版）\\n  async function setupSampler() {\\n    try {\\n      // Tone変数の再確認（リアクティブ更新のため）\\n      if (!window.Tone) {\\n        console.error('❌ window.Tone が利用できません');\\n        throw new Error('Tone.js未読み込み');\\n      }\\n      Tone = window.Tone;\\n      \\n      if (!Tone) {\\n        console.error('❌ Tone.js未初期化');\\n        throw new Error('Tone.js未初期化');\\n      }\\n      \\n      console.log('🎹 サンプラー設定開始');\\n      loadingStatus = 'AudioContext初期化中...';\\n      \\n      // AudioContext状態確認\\n      console.log(\`📊 AudioContext状態: \${Tone.context.state}\`);\\n      if (Tone.context.state !== 'running') {\\n        console.log('🔊 AudioContext開始中...');\\n        // ユーザーインタラクションが必要なため、手動開始を待つ\\n        loadingStatus = 'AudioContext手動開始が必要です';\\n        return; // ここで処理を停止\\n      }\\n      \\n      loadingStatus = 'ローカルピアノ音源読み込み中...';\\n      console.log('🎵 ローカル Salamander Grand Piano サンプラー作成中...');\\n      \\n      // ローカル音源マップ（基音として使用する10種類）\\n      const localPianoUrls = {\\n        \\"Bb3\\": \\"Bb3.mp3\\",\\n        \\"B3\\": \\"B3.mp3\\", \\n        \\"C4\\": \\"C4.mp3\\",\\n        \\"Db4\\": \\"Db4.mp3\\",\\n        \\"D4\\": \\"D4.mp3\\",\\n        \\"Eb4\\": \\"Eb4.mp3\\",\\n        \\"E4\\": \\"E4.mp3\\",\\n        \\"F4\\": \\"F4.mp3\\",\\n        \\"Gb4\\": \\"Gb4.mp3\\",\\n        \\"Ab4\\": \\"Ab4.mp3\\"\\n      };\\n      \\n      // Promise化されたサンプラー読み込み\\n      await new Promise((resolve, reject) => {\\n        console.log('🔍 BASE_URL確認:', import.meta.env.BASE_URL);\\n        console.log('🔍 完全baseUrl:', \`\${import.meta.env.BASE_URL}audio/piano/\`);\\n        \\n        // 本番環境での明示的パス設定\\n        const pianoBaseUrl = import.meta.env.PROD ? '/pitch-training/audio/piano/' : '/audio/piano/';\\n        console.log('🔍 最終pianoBaseUrl:', pianoBaseUrl);\\n        \\n        sampler = new Tone.Sampler({\\n          urls: localPianoUrls,\\n          baseUrl: pianoBaseUrl,\\n          release: 1.5,\\n          onload: () => {\\n            console.log('✅ ローカル Salamander Grand Piano音源読み込み完了');\\n            console.log('🎹 読み込み済み音源:', Object.keys(localPianoUrls));\\n            isToneLoaded = true;\\n            loadingStatus = '読み込み完了';\\n            resolve();\\n          },\\n          onerror: (error) => {\\n            console.error('❌ ローカル Salamander Grand Piano音源読み込みエラー:', error);\\n            console.error('🔍 デバッグ情報 - baseUrl:', \\"/audio/piano/\\");\\n            console.error('🔍 デバッグ情報 - urls:', localPianoUrls);\\n            reject(new Error('ローカル音源読み込み失敗'));\\n          }\\n        }).toDestination();\\n        \\n        console.log('🔗 サンプラーをDestinationに接続完了');\\n        \\n        // 個別音源ファイルのテスト読み込み\\n        console.log('🧪 個別音源ファイルテスト開始...');\\n        for (const [note, filename] of Object.entries(localPianoUrls)) {\\n          const testUrl = \`/audio/piano/\${filename}\`;\\n          console.log(\`🎵 テスト: \${note} -> \${testUrl}\`);\\n          \\n          // 音源ファイルの存在確認\\n          fetch(testUrl, { method: 'HEAD' })\\n            .then(response => {\\n              if (response.ok) {\\n                console.log(\`✅ 音源ファイル確認成功: \${testUrl}\`);\\n              } else {\\n                console.error(\`❌ 音源ファイル確認失敗: \${testUrl} (\${response.status})\`);\\n              }\\n            })\\n            .catch(error => {\\n              console.error(\`❌ 音源ファイルアクセスエラー: \${testUrl}\`, error);\\n            });\\n        }\\n        \\n        // 5秒タイムアウト（ローカル読み込みで安全のため延長）\\n        setTimeout(() => {\\n          if (!isToneLoaded) {\\n            console.warn('⚠️ ローカルピアノ音源読み込みタイムアウト（5秒）');\\n            reject(new Error('ローカル音源読み込みタイムアウト'));\\n          }\\n        }, 5000);\\n      });\\n      \\n    } catch (error) {\\n      console.error('❌ サンプラー設定エラー:', error);\\n      console.log('🔧 サンプラー再試行を試みます');\\n      \\n      // エラー時は再試行してみる\\n      toneLoadingError = \`音源エラー: \${error.message} - 再試行中...\`;\\n      loadingStatus = '音源読み込み再試行中...';\\n      \\n      // 3秒後に再試行\\n      setTimeout(async () => {\\n        try {\\n          console.log('🔄 サンプラー再試行開始');\\n          await setupSampler();\\n        } catch (retryError) {\\n          console.error('❌ 再試行も失敗:', retryError);\\n          console.log('🚨 ピアノ音源必須モード - フォールバック無効');\\n          \\n          toneLoadingError = \`❌ ピアノ音源読み込み失敗: \${retryError.message}\`;\\n          loadingStatus = 'ピアノ音源読み込み失敗 - ページを再読み込みしてください';\\n          \\n          // フォールバックは使用しない\\n          useSimpleAudio = false;\\n          isToneLoaded = false;\\n        }\\n      }, 3000);\\n    }\\n  }\\n  \\n  onMount(() => {\\n    console.log('🚀 onMount実行 - Tone.js強制初期化開始');\\n    initializeTone();\\n  });\\n  \\n  onDestroy(() => {\\n    if (sampler) {\\n      sampler.dispose();\\n    }\\n  });\\n  \\n  // 基音周波数取得\\n  function getBaseNoteFrequency(note) {\\n    return Math.round(baseNoteFrequencies[note] || 0);\\n  }\\n  \\n  // スケール周波数取得\\n  function getScaleFrequency(baseNote, scaleIndex) {\\n    const baseFreq = baseNoteFrequencies[baseNote];\\n    if (!baseFreq) return 0;\\n    return Math.round(baseFreq * scaleRatios[scaleIndex]);\\n  }\\n  \\n  // 手動AudioContext開始\\n  async function handleManualAudioStart() {\\n    console.log('🔊 手動AudioContext開始実行');\\n    try {\\n      if (Tone && Tone.context && Tone.context.state === 'suspended') {\\n        await Tone.start();\\n        console.log('✅ AudioContext手動開始完了');\\n        // AudioContextが開始されたら、サンプラー設定を続行\\n        await setupSampler();\\n      }\\n    } catch (error) {\\n      console.error('❌ 手動AudioContext開始失敗:', error);\\n      toneLoadingError = \`AudioContext開始失敗: \${error.message}\`;\\n    }\\n  }\\n  \\n  // 強制的にシンプル音源モードに切り替え\\n  function forceSimpleAudio() {\\n    console.log('🔧 手動でシンプル音源モードに切り替え');\\n    useSimpleAudio = true;\\n    isToneLoaded = true;\\n    toneLoadingError = null;\\n    loadingStatus = 'シンプル音源モード';\\n  }\\n  \\n  // 基音ランダム選択\\n  function selectRandomBase() {\\n    const randomIndex = Math.floor(Math.random() * baseNotes.length);\\n    currentBaseNote = baseNotes[randomIndex];\\n    return currentBaseNote;\\n  }\\n\\n  // トレーニング開始\\n  function startTraining() {\\n    // リセット\\n    currentScaleIndex = 0;\\n    scaleResults = [];\\n    showResults = false;\\n    \\n    // 基音選択・再生\\n    const baseNote = selectRandomBase();\\n    playBaseNote(baseNote);\\n  }\\n\\n  // 基音再生（Tone.js必須モード）\\n  async function playBaseNote(note) {\\n    isPlaying = true;\\n    console.log(\`🎹 ピアノ基音再生: \${note} (Tone.js読み込み状態: \${isToneLoaded})\`);\\n    \\n    try {\\n      if (!isToneLoaded || !sampler) {\\n        console.error('❌ Tone.js または Sampler が未初期化 - 再生不可');\\n        alert('ピアノ音源が読み込まれていません。ページを再読み込みしてください。');\\n        isPlaying = false;\\n        return;\\n      }\\n      \\n      // AudioContext開始（ユーザー操作後なので安全）\\n      if (Tone.context.state !== 'running') {\\n        await Tone.start();\\n      }\\n      \\n      // 基音を2.5秒間再生\\n      sampler.triggerAttackRelease(note, \\"2.5\\");\\n      console.log(\`Salamander Grand Piano で \${note} 再生開始\`);\\n      \\n      // 2.5秒後に再生完了、検出開始\\n      setTimeout(() => {\\n        isPlaying = false;\\n        startDetection();\\n      }, 2500);\\n      \\n    } catch (error) {\\n      console.error('❌ ピアノ音源再生エラー:', error);\\n      alert(\`ピアノ音源再生に失敗しました: \${error.message}\`);\\n      isPlaying = false;\\n    }\\n  }\\n  \\n  // シンプル音源フォールバック（Web Audio API基本機能）\\n  function playSimpleBeep(frequency) {\\n    try {\\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\\n      const oscillator = audioContext.createOscillator();\\n      const gainNode = audioContext.createGain();\\n      \\n      oscillator.connect(gainNode);\\n      gainNode.connect(audioContext.destination);\\n      \\n      oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\\n      oscillator.type = 'sine';\\n      \\n      gainNode.gain.setValueAtTime(0.3, audioContext.currentTime);\\n      gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 2.5);\\n      \\n      oscillator.start(audioContext.currentTime);\\n      oscillator.stop(audioContext.currentTime + 2.5);\\n      \\n      console.log(\`シンプル音源で \${frequency}Hz 再生中\`);\\n    } catch (error) {\\n      console.error('シンプル音源エラー:', error);\\n    }\\n  }\\n\\n  // 音程検出開始（改良版）\\n  function startDetection() {\\n    isDetecting = true;\\n    \\n    // 期待周波数を計算\\n    const expectedFrequencies = scaleNotes.map((_, index) => \\n      getScaleFrequency(currentBaseNote, index)\\n    );\\n    \\n    // 音程検出シミュレート（改良版）\\n    const detectionInterval = setInterval(() => {\\n      if (!isDetecting) {\\n        clearInterval(detectionInterval);\\n        return;\\n      }\\n      \\n      // より現実的な音量・周波数データ\\n      currentVolume = 40 + Math.random() * 50; // 40-90%の範囲\\n      \\n      // 現在の期待音階に基づいた周波数（±誤差を含む）\\n      const expectedFreq = expectedFrequencies[currentScaleIndex];\\n      const deviation = (Math.random() - 0.5) * 40; // ±20Hzの誤差\\n      currentFrequency = expectedFreq + deviation;\\n      \\n      // 検出精度シミュレート（5セント精度を模擬）\\n      const accuracy = Math.max(0, 100 - Math.abs(deviation) * 2);\\n      \\n      // 音階名の更新\\n      currentNote = scaleNotes[currentScaleIndex];\\n      \\n      // 正解判定（精度ベース）\\n      if (Math.random() > 0.6) { // 40%の確率で判定\\n        const isCorrect = accuracy > 70; // 70%以上の精度で正解\\n        scaleResults[currentScaleIndex] = isCorrect;\\n        currentScaleIndex++;\\n        \\n        console.log(\`\${currentNote}: \${accuracy.toFixed(1)}% 精度, \${isCorrect ? '正解' : '不正解'}\`);\\n        \\n        // 8音階完了チェック\\n        if (currentScaleIndex >= 8) {\\n          finishTraining();\\n        }\\n      }\\n    }, 300); // より高速な更新\\n  }\\n\\n  // トレーニング終了\\n  function finishTraining() {\\n    isDetecting = false;\\n    showResults = true;\\n  }\\n\\n  // 音量バー幅計算\\n  \\n  // スコア計算と評価\\n  $: correctCount = scaleResults.filter(result => result).length;\\n  $: score = Math.round((correctCount / 8) * 100);\\n  $: grade = getGrade(score);\\n  $: feedback = getFeedback(score);\\n  \\n  // 成績評価\\n  function getGrade(score) {\\n    if (score >= 90) return 'Excellent';\\n    if (score >= 70) return 'Good';\\n    if (score >= 50) return 'Practice';\\n    return 'Needs Work';\\n  }\\n  \\n  // フィードバックメッセージ\\n  function getFeedback(score) {\\n    if (score >= 90) return '素晴らしい相対音感です！完璧な演奏でした。';\\n    if (score >= 70) return '良好な相対音感です。もう少し練習すれば完璧になります。';\\n    if (score >= 50) return '基本的な相対音感は身についています。継続練習で向上できます。';\\n    return '相対音感の基礎練習から始めましょう。毎日少しずつ練習することが大切です。';\\n  }\\n<\/script>\\n\\n<svelte:head>\\n  <title>ランダム基音モード - 相対音感トレーニング</title>\\n</svelte:head>\\n\\n<PageLayout showBackButton={true}>\\n  <div class=\\"random-training\\">\\n    <!-- ヘッダー -->\\n    <div class=\\"header\\">\\n      <div class=\\"mode-header\\">\\n        <div class=\\"mode-icon\\">\\n          <svg width=\\"32\\" height=\\"32\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n            <path d=\\"M9 18V5l12-2v13\\"/>\\n            <circle cx=\\"6\\" cy=\\"18\\" r=\\"3\\"/>\\n            <circle cx=\\"18\\" cy=\\"16\\" r=\\"3\\"/>\\n          </svg>\\n        </div>\\n        <div>\\n          <h1 class=\\"mode-title\\">ランダム基音モード</h1>\\n          <p class=\\"mode-description\\">10種類の基音からランダムに選択してトレーニング</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    {#if !isPlaying && !isDetecting && !showResults}\\n      <!-- 開始画面 -->\\n      <div class=\\"start-screen\\">\\n        <Card variant=\\"default\\" padding=\\"lg\\">\\n          <div class=\\"start-content\\">\\n            <h2 class=\\"start-title\\">トレーニング開始</h2>\\n            <p class=\\"start-description\\">\\n              基音を聞いた後、その音を「ド」として<br>\\n              ドレミファソラシドを連続して歌ってください\\n            </p>\\n            \\n            <div class=\\"instructions\\">\\n              <div class=\\"instruction-item\\">\\n                <span class=\\"step-number\\">1</span>\\n                <div>\\n                  <h3>基音を聞く</h3>\\n                  <p>ランダムに選ばれた基音をピアノで再生します</p>\\n                </div>\\n              </div>\\n              \\n              <div class=\\"instruction-item\\">\\n                <span class=\\"step-number\\">2</span>\\n                <div>\\n                  <h3>連続歌唱</h3>\\n                  <p>基音を「ド」として、ドレミファソラシドを連続して歌います</p>\\n                </div>\\n              </div>\\n              \\n              <div class=\\"instruction-item\\">\\n                <span class=\\"step-number\\">3</span>\\n                <div>\\n                  <h3>自動判定</h3>\\n                  <p>歌唱中にリアルタイムで各音階を自動判定します</p>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!-- AudioContext が suspended の場合の手動開始ボタン -->\\n            {#if !isToneLoaded && Tone && Tone.context && Tone.context.state === 'suspended'}\\n              <Button variant=\\"primary\\" size=\\"lg\\" fullWidth on:click={handleManualAudioStart}>\\n                🔊 音声を有効化（クリックしてください）\\n              </Button>\\n              <div class=\\"loading-info\\">\\n                <p class=\\"loading-message\\">\\n                  ブラウザの制限により、音声を使用するには手動での有効化が必要です\\n                </p>\\n              </div>\\n            {:else}\\n              <Button variant=\\"success\\" size=\\"lg\\" fullWidth on:click={startTraining} disabled={!isToneLoaded}>\\n                {#if !isToneLoaded}\\n                  {loadingStatus}\\n                {:else}\\n                  トレーニング開始\\n                {/if}\\n              </Button>\\n              \\n              {#if !isToneLoaded}\\n                <div class=\\"loading-info\\">\\n                  <p class=\\"loading-message\\">\\n                    {loadingStatus}\\n                  </p>\\n                  {#if toneLoadingError}\\n                    <p class=\\"error-message\\">\\n                      ❌ {toneLoadingError}\\n                    </p>\\n                    <div class=\\"fallback-options\\">\\n                      <Button variant=\\"secondary\\" size=\\"sm\\" on:click={forceSimpleAudio}>\\n                        シンプル音源で開始\\n                      </Button>\\n                      <p class=\\"retry-message\\">\\n                        または、ページを再読み込みしてみてください\\n                      </p>\\n                    </div>\\n                  {/if}\\n                </div>\\n              {/if}\\n            {/if}\\n          </div>\\n        </Card>\\n      </div>\\n    {:else if isPlaying}\\n      <!-- 基音再生中 -->\\n      <div class=\\"playing-screen\\">\\n        <Card variant=\\"success\\" padding=\\"lg\\">\\n          <div class=\\"playing-content\\">\\n            <div class=\\"playing-icon\\">\\n              <svg width=\\"48\\" height=\\"48\\" viewBox=\\"0 0 24 24\\" fill=\\"none\\" stroke=\\"currentColor\\" stroke-width=\\"2\\">\\n                <circle cx=\\"12\\" cy=\\"12\\" r=\\"10\\"/>\\n                <polygon points=\\"10,8 16,12 10,16\\"/>\\n              </svg>\\n            </div>\\n            <h2 class=\\"playing-title\\">基音再生中</h2>\\n            <p class=\\"playing-note\\">基音: {currentBaseNote}</p>\\n            <p class=\\"playing-frequency\\">周波数: {getBaseNoteFrequency(currentBaseNote)}Hz</p>\\n            <p class=\\"playing-instruction\\">\\n              この音を覚えて「ド」として認識してください\\n            </p>\\n            \\n            <div class=\\"playing-progress\\">\\n              <div class=\\"progress-bar\\">\\n                <div class=\\"progress-fill\\"></div>\\n              </div>\\n            </div>\\n          </div>\\n        </Card>\\n      </div>\\n    {:else if isDetecting}\\n      <!-- 音程検出中 -->\\n      <div class=\\"detection-screen\\">\\n        <!-- ガイドアニメーション -->\\n        <Card variant=\\"default\\" padding=\\"lg\\">\\n          <div class=\\"guide-content\\">\\n            <h2 class=\\"guide-title\\">ドレミファソラシドを歌ってください</h2>\\n            <div class=\\"scale-guide\\">\\n              {#each scaleNotes as note, index}\\n                <div class=\\"scale-note\\" class:active={index === currentScaleIndex} class:completed={scaleResults[index] !== undefined}>\\n                  <span class=\\"note-text\\">{note}</span>\\n                  <span class=\\"note-frequency\\">{getScaleFrequency(currentBaseNote, index)}Hz</span>\\n                  {#if scaleResults[index] !== undefined}\\n                    <span class=\\"result-icon {scaleResults[index] ? 'correct' : 'incorrect'}\\">\\n                      {scaleResults[index] ? '✓' : '×'}\\n                    </span>\\n                  {/if}\\n                </div>\\n              {/each}\\n            </div>\\n          </div>\\n        </Card>\\n\\n        <!-- リアルタイム表示 -->\\n        <div class=\\"realtime-display\\">\\n          <div class=\\"display-grid\\">\\n            <!-- 音量表示 -->\\n            <Card variant=\\"default\\" padding=\\"md\\">\\n              <div class=\\"volume-display\\">\\n                <h3 class=\\"display-title\\">音量レベル</h3>\\n                <VolumeBar volume={currentVolume} height=\\"20px\\" />\\n              </div>\\n            </Card>\\n\\n            <!-- 音程表示 -->\\n            <Card variant=\\"default\\" padding=\\"md\\">\\n              <PitchDisplay \\n                frequency={currentFrequency}\\n                targetNote={scaleNotes[currentScaleIndex]}\\n                currentNote={currentNote}\\n                accuracy={0}\\n                isDetecting={isDetecting}\\n              />\\n            </Card>\\n          </div>\\n        </div>\\n\\n        <!-- 進行状況 -->\\n        <Card variant=\\"default\\" padding=\\"md\\">\\n          <div class=\\"progress-info\\">\\n            <h3 class=\\"progress-title\\">進行状況</h3>\\n            <div class=\\"progress-details\\">\\n              <span>現在: {scaleNotes[currentScaleIndex]} ({currentScaleIndex + 1}/8)</span>\\n              <span>正解: {correctCount}/{currentScaleIndex}</span>\\n            </div>\\n          </div>\\n        </Card>\\n      </div>\\n    {:else if showResults}\\n      <!-- 結果表示 -->\\n      <div class=\\"results-screen\\">\\n        <Card variant=\\"default\\" padding=\\"lg\\">\\n          <div class=\\"results-content\\">\\n            <h2 class=\\"results-title\\">トレーニング結果</h2>\\n            \\n            <!-- スコア表示 -->\\n            <div class=\\"score-display\\">\\n              <div class=\\"score-circle {grade.toLowerCase()}\\">\\n                <span class=\\"score-value\\">{score}</span>\\n                <span class=\\"score-unit\\">点</span>\\n              </div>\\n              <div class=\\"grade-info\\">\\n                <h3 class=\\"grade-title\\">{grade}</h3>\\n                <p class=\\"score-description\\">\\n                  8音階中 {correctCount}音階 正解\\n                </p>\\n                <p class=\\"feedback-message\\">\\n                  {feedback}\\n                </p>\\n              </div>\\n            </div>\\n\\n            <!-- 音階別結果 -->\\n            <div class=\\"detailed-results\\">\\n              <h3 class=\\"details-title\\">音階別結果</h3>\\n              <div class=\\"scale-results\\">\\n                {#each scaleNotes as note, index}\\n                  <div class=\\"scale-result\\">\\n                    <span class=\\"scale-note-name\\">{note}</span>\\n                    <span class=\\"scale-result-icon {scaleResults[index] ? 'correct' : 'incorrect'}\\">\\n                      {scaleResults[index] ? '✓' : '×'}\\n                    </span>\\n                  </div>\\n                {/each}\\n              </div>\\n            </div>\\n\\n            <!-- アクションボタン -->\\n            <div class=\\"action-buttons\\">\\n              <Button variant=\\"success\\" size=\\"lg\\" fullWidth on:click={startTraining}>\\n                もう一度チャレンジ\\n              </Button>\\n              <Button variant=\\"secondary\\" size=\\"md\\" fullWidth>\\n                結果を保存\\n              </Button>\\n            </div>\\n          </div>\\n        </Card>\\n      </div>\\n    {/if}\\n  </div>\\n</PageLayout>\\n\\n<style>\\n  .random-training {\\n    max-width: 800px;\\n    margin: 0 auto;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-6);\\n  }\\n\\n  .header {\\n    text-align: center;\\n  }\\n\\n  .mode-header {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: var(--space-4);\\n  }\\n\\n  .mode-icon {\\n    width: 64px;\\n    height: 64px;\\n    border-radius: 50%;\\n    background-color: #d1fae5;\\n    color: #059669;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    flex-shrink: 0;\\n  }\\n\\n  .mode-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-1) 0;\\n  }\\n\\n  .mode-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  /* 開始画面 */\\n  .start-content {\\n    text-align: center;\\n  }\\n\\n  .start-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .start-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n    line-height: 1.6;\\n  }\\n\\n  .instructions {\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-4);\\n    margin-bottom: var(--space-8);\\n    text-align: left;\\n  }\\n\\n  .instruction-item {\\n    display: flex;\\n    align-items: flex-start;\\n    gap: var(--space-3);\\n  }\\n\\n  .step-number {\\n    width: 32px;\\n    height: 32px;\\n    border-radius: 50%;\\n    background-color: var(--color-primary);\\n    color: white;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-weight: 600;\\n    flex-shrink: 0;\\n  }\\n\\n  .instruction-item h3 {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-1) 0;\\n  }\\n\\n  .instruction-item p {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: 0;\\n  }\\n\\n  /* 基音再生画面 */\\n  .playing-content {\\n    text-align: center;\\n  }\\n\\n  .playing-icon {\\n    width: 80px;\\n    height: 80px;\\n    border-radius: 50%;\\n    background-color: var(--color-primary-pale);\\n    color: var(--color-primary);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    margin: 0 auto var(--space-4) auto;\\n  }\\n\\n  .playing-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .playing-note {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-primary);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .playing-frequency {\\n    font-size: var(--text-base);\\n    font-weight: 500;\\n    color: var(--color-gray-700);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .playing-instruction {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-6) 0;\\n  }\\n\\n  .playing-progress {\\n    margin: 0 auto;\\n    max-width: 200px;\\n  }\\n\\n  .progress-bar {\\n    height: 8px;\\n    background-color: var(--color-gray-200);\\n    border-radius: 4px;\\n    overflow: hidden;\\n  }\\n\\n  .progress-fill {\\n    height: 100%;\\n    background-color: var(--color-primary);\\n    animation: progress 2.5s ease-in-out;\\n  }\\n\\n  @keyframes progress {\\n    from { width: 0%; }\\n    to { width: 100%; }\\n  }\\n\\n  /* 検出画面 */\\n  .guide-content {\\n    text-align: center;\\n  }\\n\\n  .guide-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-6) 0;\\n  }\\n\\n  .scale-guide {\\n    display: grid;\\n    grid-template-columns: repeat(8, 1fr);\\n    gap: var(--space-2);\\n  }\\n\\n  .scale-note {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: var(--space-3);\\n    border-radius: 8px;\\n    background-color: var(--color-gray-100);\\n    transition: all 0.3s ease;\\n  }\\n\\n  .scale-note.active {\\n    background-color: var(--color-primary);\\n    color: white;\\n    transform: scale(1.1);\\n  }\\n\\n  .scale-note.completed {\\n    background-color: var(--color-gray-200);\\n  }\\n\\n  .note-text {\\n    font-weight: 600;\\n    font-size: var(--text-lg);\\n  }\\n\\n  .note-frequency {\\n    font-size: var(--text-xs);\\n    color: var(--color-gray-500);\\n    font-weight: 500;\\n    margin-top: var(--space-1);\\n  }\\n\\n  .result-icon {\\n    font-size: var(--text-sm);\\n    font-weight: 600;\\n  }\\n\\n  .result-icon.correct {\\n    color: var(--color-success);\\n  }\\n\\n  .result-icon.incorrect {\\n    color: var(--color-error);\\n  }\\n\\n  .realtime-display {\\n    margin-top: var(--space-6);\\n  }\\n\\n  .display-grid {\\n    display: grid;\\n    gap: var(--space-4);\\n    grid-template-columns: 1fr 1fr;\\n  }\\n\\n  .display-title {\\n    font-size: var(--text-base);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-3) 0;\\n    text-align: center;\\n  }\\n\\n\\n\\n  .progress-info {\\n    text-align: center;\\n  }\\n\\n  .progress-title {\\n    font-size: var(--text-base);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .progress-details {\\n    display: flex;\\n    justify-content: space-between;\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n  }\\n\\n  /* 結果画面 */\\n  .results-content {\\n    text-align: center;\\n  }\\n\\n  .results-title {\\n    font-size: var(--text-xl);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-6) 0;\\n  }\\n\\n  .score-display {\\n    margin-bottom: var(--space-6);\\n    display: flex;\\n    align-items: center;\\n    gap: var(--space-6);\\n    flex-wrap: wrap;\\n    justify-content: center;\\n  }\\n\\n  .score-circle {\\n    width: 120px;\\n    height: 120px;\\n    border-radius: 50%;\\n    background-color: var(--color-primary-pale);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border: 4px solid var(--color-primary);\\n    flex-shrink: 0;\\n  }\\n\\n  .score-circle.excellent {\\n    background-color: #dcfce7;\\n    border-color: #16a34a;\\n  }\\n\\n  .score-circle.good {\\n    background-color: #dbeafe;\\n    border-color: #2563eb;\\n  }\\n\\n  .score-circle.practice {\\n    background-color: #fef3c7;\\n    border-color: #d97706;\\n  }\\n\\n  .score-circle.needs {\\n    background-color: #fee2e2;\\n    border-color: #dc2626;\\n  }\\n\\n  .grade-info {\\n    text-align: left;\\n    flex: 1;\\n    min-width: 200px;\\n  }\\n\\n  .grade-title {\\n    font-size: var(--text-2xl);\\n    font-weight: 700;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-2) 0;\\n  }\\n\\n  .score-value {\\n    font-size: var(--text-4xl);\\n    font-weight: 700;\\n    color: var(--color-primary);\\n  }\\n\\n  .score-unit {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-primary);\\n    margin-left: var(--space-1);\\n  }\\n\\n  .score-description {\\n    font-size: var(--text-base);\\n    color: var(--color-gray-600);\\n    margin: 0 0 var(--space-3) 0;\\n  }\\n\\n  .feedback-message {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-700);\\n    line-height: 1.5;\\n    margin: 0;\\n    font-style: italic;\\n  }\\n\\n  .details-title {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin: 0 0 var(--space-4) 0;\\n  }\\n\\n  .scale-results {\\n    display: grid;\\n    grid-template-columns: repeat(8, 1fr);\\n    gap: var(--space-2);\\n    margin-bottom: var(--space-8);\\n  }\\n\\n  .scale-result {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding: var(--space-2);\\n    border-radius: 8px;\\n    background-color: var(--color-gray-50);\\n  }\\n\\n  .scale-note-name {\\n    font-weight: 600;\\n    color: var(--color-gray-900);\\n    margin-bottom: var(--space-1);\\n  }\\n\\n  .scale-result-icon {\\n    font-size: var(--text-lg);\\n    font-weight: 600;\\n  }\\n\\n  .scale-result-icon.correct {\\n    color: var(--color-success);\\n  }\\n\\n  .scale-result-icon.incorrect {\\n    color: var(--color-error);\\n  }\\n\\n  .action-buttons {\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-3);\\n  }\\n\\n  .loading-info {\\n    text-align: center;\\n    margin: var(--space-3) 0 0 0;\\n  }\\n\\n  .loading-message {\\n    font-size: var(--text-sm);\\n    color: var(--color-gray-600);\\n    margin: var(--space-2) 0;\\n    animation: pulse 2s infinite;\\n  }\\n\\n  .error-message {\\n    font-size: var(--text-sm);\\n    color: var(--color-error);\\n    margin: var(--space-2) 0;\\n    font-weight: 600;\\n  }\\n\\n  .fallback-options {\\n    margin: var(--space-3) 0;\\n    display: flex;\\n    flex-direction: column;\\n    gap: var(--space-2);\\n    align-items: center;\\n  }\\n\\n  .retry-message {\\n    font-size: var(--text-xs);\\n    color: var(--color-gray-500);\\n    margin: 0;\\n  }\\n\\n  @keyframes pulse {\\n    0%, 100% { opacity: 1; }\\n    50% { opacity: 0.5; }\\n  }\\n\\n  @media (max-width: 767px) {\\n    .scale-guide,\\n    .scale-results {\\n      grid-template-columns: repeat(4, 1fr);\\n    }\\n\\n    .display-grid {\\n      grid-template-columns: 1fr;\\n    }\\n\\n    .mode-header {\\n      flex-direction: column;\\n      text-align: center;\\n    }\\n\\n    .score-display {\\n      flex-direction: column;\\n      text-align: center;\\n    }\\n\\n    .grade-info {\\n      text-align: center;\\n    }\\n\\n    .note-frequency {\\n      display: none;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let loadingStatus = "Tone.js読み込み中...";
  onDestroy(() => {
  });
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-1nfe5e4_START -->${$$result.title = `<title>ランダム基音モード - 相対音感トレーニング</title>`, ""}<!-- HEAD_svelte-1nfe5e4_END -->`, ""} ${validate_component(PageLayout, "PageLayout").$$render($$result, { showBackButton: true }, {}, {
    default: () => {
      return `<div class="random-training svelte-1samlw1"> <div class="header svelte-1samlw1"><div class="mode-header svelte-1samlw1"><div class="mode-icon svelte-1samlw1"><svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle></svg></div> <div><h1 class="mode-title svelte-1samlw1" data-svelte-h="svelte-4p7mnf">ランダム基音モード</h1> <p class="mode-description svelte-1samlw1" data-svelte-h="svelte-hq31uv">10種類の基音からランダムに選択してトレーニング</p></div></div></div> ${` <div class="start-screen">${validate_component(Card, "Card").$$render($$result, { variant: "default", padding: "lg" }, {}, {
        default: () => {
          return `<div class="start-content svelte-1samlw1"><h2 class="start-title svelte-1samlw1" data-svelte-h="svelte-177yn6">トレーニング開始</h2> <p class="start-description svelte-1samlw1">基音を聞いた後、その音を「ド」として<br>
              ドレミファソラシドを連続して歌ってください</p> <div class="instructions svelte-1samlw1"><div class="instruction-item svelte-1samlw1"><span class="step-number svelte-1samlw1" data-svelte-h="svelte-1gvrwis">1</span> <div><h3 class="svelte-1samlw1" data-svelte-h="svelte-3o2umq">基音を聞く</h3> <p class="svelte-1samlw1" data-svelte-h="svelte-r15f9m">ランダムに選ばれた基音をピアノで再生します</p></div></div> <div class="instruction-item svelte-1samlw1"><span class="step-number svelte-1samlw1" data-svelte-h="svelte-1lllrxb">2</span> <div><h3 class="svelte-1samlw1" data-svelte-h="svelte-1lldj7q">連続歌唱</h3> <p class="svelte-1samlw1" data-svelte-h="svelte-1n1vdfq">基音を「ド」として、ドレミファソラシドを連続して歌います</p></div></div> <div class="instruction-item svelte-1samlw1"><span class="step-number svelte-1samlw1" data-svelte-h="svelte-1swoen2">3</span> <div><h3 class="svelte-1samlw1" data-svelte-h="svelte-wm6hg7">自動判定</h3> <p class="svelte-1samlw1" data-svelte-h="svelte-1tyv544">歌唱中にリアルタイムで各音階を自動判定します</p></div></div></div>  ${`${validate_component(Button, "Button").$$render(
            $$result,
            {
              variant: "success",
              size: "lg",
              fullWidth: true,
              disabled: true
            },
            {},
            {
              default: () => {
                return `${`${escape(loadingStatus)}`}`;
              }
            }
          )} ${`<div class="loading-info svelte-1samlw1"><p class="loading-message svelte-1samlw1">${escape(loadingStatus)}</p> ${``}</div>`}`}</div>`;
        }
      })}</div>`}</div>`;
    }
  })}`;
});
export {
  Page as default
};
